{"version":3,"sources":["assets/img/logo.png","assets/img/user1.png","core/configs.js","core/CRUD.js","components/Login/Login.jsx","components/project/header/Header.js","components/project/project_tests/test.js","components/project/project_tests/Projects_tests.js","components/project/page1/Page1.js","components/project/next_btn/Next_btn.js","components/project/admin_page/Admin_page.js","components/project/super_admin_page/Super_admin_page.js","components/project/Project.js","App.js","serviceWorker.js","index.js","assets/img/login_bg.png"],"names":["module","exports","__webpack_require__","p","CONFIGS","DOMAIN","GET","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","statusCode","responseObj","wrap","_context","prev","next","fetch","concat","method","headers","Accept","Content-Type","Authorization","localStorage","getItem","sent","status","json","abrupt","assign","t0","Error","message","stop","_x","apply","this","arguments","POST","_ref2","_callee2","data","_context2","body","JSON","stringify","_x2","_x3","Login","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeInp","value","index","inputs","state","input","isTuched","keys","validation","map","elm","isValid","test","setState","loginUser","email","password","success","setItem","id","token","window","location","href","error","loginStyle","backgroundImage","loginBg","label","type","required","massage","_this2","react_default","createElement","className","style","src","logo","Fragment","key","onChange","event","target","placeholder","onClick","React","Component","Header","userName","userInfo","userId","fullName","userImg","Test","options","text","content","subheader","Projects_tests","Dropdown","selection","fluid","Page1","background_page","background","Header_Header","project_tests_Projects_tests","Next_btn","Admin_page","class","i","Super_admin_page","name","checked","Project","role","App","react_router","path","exact","component","Boolean","hostname","match","app","react_router_dom","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d80cc81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c5069d2c.png\";","module.exports = __webpack_public_path__ + \"static/media/user1.a83af490.png\";","const HOST = 'localhost';\nconst PORT = 3000;\n\nconst CONFIGS = {\n  // DOMAIN: `http://${HOST}:${PORT}`\n  DOMAIN: 'https://invoiceeapp.herokuapp.com'\n};\n\nexport default CONFIGS;\n","import CONFIGS from './configs';\n\nexport const GET = async url => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem('userToken')}`\n      }\n    });\n    let statusCode = response.status;\n    let responseObj = await response.json();\n    \n    return Object.assign(responseObj, { statusCode });\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const POST = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    let statusCode = response.status;\n    let responseObj = await response.json();\n\n    return Object.assign(responseObj, { statusCode });\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const PUT = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    let statusCode = response.status;\n    let responseObj = await response.json();\n\n    return Object.assign(responseObj, { statusCode });\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const DELETE = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'DELETE',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    let statusCode = response.status;\n    let responseObj = await response.json();\n\n    return Object.assign(responseObj, { statusCode });\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n","import React from 'react';\r\nimport './login.css';\r\nimport logo from \"../../assets/img/logo.png\";\r\nimport loginBg from \"../../assets/img/login_bg.png\";\r\nimport {Route, NavLink} from \"react-router-dom\";\r\nimport { POST } from '../../core/CRUD';\r\n\r\nexport default class Login extends React.Component {\r\n      constructor(props){\r\n          super(props);\r\n          this.state = {\r\n            inputs:[\r\n                {\r\n                    label: \"Email\",\r\n                    type: \"email\",\r\n                    isTuched: false,\r\n                    isValid: false,\r\n                    value: \"\",\r\n                    validation: {\r\n                        required: true,\r\n                        email: true\r\n                    },\r\n                    massage:'Please enter valid email!'\r\n                },\r\n                {\r\n                    label: \"Password\",\r\n                    type: \"password\",\r\n                    isTuched: false,\r\n                    isValid: false,\r\n                        value: \"\",\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    massage:'Please enter valid password!'\r\n                }\r\n            ],\r\n            error: \"\"\r\n          }\r\n      }\r\n\r\n      \r\n    onChangeInp = (value,index) => {\r\n        const inputs = this.state.inputs\r\n        const input = inputs[index];\r\n        input.value = value;\r\n        input.isTuched = true;\r\n        Object.keys(input.validation).map((elm)=>{\r\n            if(elm == \"required\"){\r\n                if(value == \"\" || value == null){\r\n                    input.isValid = false;\r\n                }\r\n                else{\r\n                    input.isValid = true\r\n                }\r\n\r\n            }else if (elm == \"email\"){\r\n                let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                if(re.test(value)){\r\n                    input.isValid = true;\r\n                }\r\n                else{\r\n                    input.isValid = false\r\n                }\r\n            }\r\n        })\r\n        this.setState({\r\n            inputs\r\n        })\r\n    }\r\n\r\n    loginUser = async data => {\r\n      let email = data[0].value;\r\n      let password = data[1].value;\r\n\r\n      if(email && password){\r\n        try {\r\n          let response = await POST('api/auth/login', { email, password });\r\n          if(response.success){\r\n            localStorage.setItem('userId', response.data.id);\r\n            localStorage.setItem('userToken', response.data.token);\r\n            window.location.href = '/Project';\r\n          } else {\r\n            this.setState({error: response.error});\r\n          }\r\n        } catch (error) {\r\n          this.setState({\r\n            error: error.message\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          error: 'Username or password is empty!'\r\n        });\r\n      }\r\n    }\r\n\r\n     loginStyle = {\r\n        backgroundImage: `url(${loginBg})`,\r\n      }\r\n    render(){\r\n    \r\n        return(\r\n            <div className=\"Login\" style={this.loginStyle}>\r\n                <div className=\"login_size\">\r\n                <div className=\"login_top\">\r\n                    <img src={logo} />\r\n                </div>\r\n                <div className=\"login_inputs\">\r\n                  {this.state.inputs.map((elm, index)=>{\r\n                      return(\r\n                          <>\r\n                          <p className=\"error_message\">{elm.isTuched && !elm.isValid?elm.massage:''}</p>\r\n                          <input key={index} type={elm.type} value={elm.value} onChange={event=>this.onChangeInp(event.target.value,index)} placeholder={elm.label} />\r\n                          </>\r\n                      )\r\n                  })}\r\n                <button onClick={() => this.loginUser(this.state.inputs)}>Login</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './header.css';\r\nimport userImg from \"../../../assets/img/user1.png\";\r\nimport { GET } from '../../../core/CRUD';\r\n\r\n\r\nexport default class Header extends React.Component {\r\n      constructor(props){\r\n          super(props);\r\n          this.state = {\r\n              userName: \"\",\r\n              userInfo: \"lorem ipsum dolor\"\r\n          }\r\n      }\r\n      async componentDidMount(){\r\n        let userId = localStorage.getItem('userId');\r\n        let response = await GET(`api/users/${userId}`);\r\n        this.setState({\r\n            userName: response.data.fullName\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"Header\">\r\n                    <div className=\"header_size\">\r\n                        <div className=\"header_size_left\">\r\n                            <img src={userImg} />\r\n                        </div>\r\n                        <div className=\"header_size_right\">\r\n                            <p className=\"Employer_Name\">{this.state.userName}</p>\r\n                            <p className=\"Employer_info\">{this.state.userInfo}</p>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport \"./project_tests.css\";\r\n\r\n\r\n\r\nclass Test extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <p className=\"text_tittle\">Second Test Project</p>\r\n                <div className=\"test_flex\">\r\n                <p>5/23/2019</p>\r\n                <p>ACC001</p>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Test","import React from 'react';\r\nimport { Dropdown, Header } from 'semantic-ui-react';\r\nimport \"./project_tests.css\";\r\nimport Test from \"./test.js\"\r\n\r\n\r\nconst options = [\r\n  {\r\n    key: 1,\r\n    text: 'Second Test Project(1)',\r\n    value: 1,\r\n    content: <Test  content='Second Test Project' subheader='12.11' />,\r\n  },\r\n  {\r\n    key: 2,\r\n    text: 'Thired Test Project(2)',\r\n    value: 2,\r\n    content: <Test content='Tablet' subheader='Thired Test Project(2)' />,\r\n  },\r\n  {\r\n    key: 3,\r\n    text: 'Fourth Test Project(3)',\r\n    value: 3,\r\n    content: <Test  content='Desktop' subheader='Fourth Test Project(3)' />,\r\n  },\r\n]\r\n\r\nconst Projects_tests = () => (\r\n    <div>\r\n        <Dropdown selection fluid options={options} placeholder='Projects' />\r\n    </div>\r\n)\r\n\r\nexport default Projects_tests","import React from 'react';\r\nimport './page1.css';\r\nimport Header from '../header/Header';\r\nimport background from \"../../../assets/img/login_bg.png\";\r\nimport Projects_tests from \"../project_tests/Projects_tests\"\r\n\r\n\r\nexport default class Page1 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let background_page = {\r\n            backgroundImage: `url(${background})`,\r\n        }\r\n        return (\r\n            <div className=\"Page1\" style={background_page}>\r\n                <div className=\"page1_size\">\r\n                    <Header />\r\n                    <Projects_tests />\r\n                    <div className=\"next_btn_div\">\r\n                    <button className=\"next_btn\">next <i className=\"fas fa-arrow-right\" /> </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './next_btn.css';\n\nexport default function Next_btn(props){\n        return(\n            <div className=\"next_btn_div\">\n            <button className=\"next_btn\">next <i className=\"fas fa-arrow-right\" /> </button>\n            </div>\n        )\n}","import React from 'react';\nimport './admin_page.css';\nimport Header from '../header/Header';\nimport background from \"../../../assets/img/login_bg.png\";\nimport Projects_tests from \"../project_tests/Projects_tests\";\nimport Next_btn from \"../next_btn/Next_btn\"\n\n\nexport default class Admin_page extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        let background_page = {\n            backgroundImage: `url(${background})`,\n        }\n        return (\n            <div className=\"Admin_page\" style={background_page}>\n                <div className=\"admin_page_size\">\n                    <Header />\n                    <div className=\"add_new_project_btn\">\n                        <button><i class=\"fas fa-plus\" i /> Add new project</button>\n                    </div>\n                    <div className=\"admin_page_inputs\">\n                        <div className=\"admin_page_inputs_filtr\">\n                            <input type=\"checkbox\" />\n                            <p>DD/MM/YY</p>\n                        </div>\n                        <div className=\"admin_page_inputs_filtr admin_page_inputs_filtr_2\">\n                            <input type=\"checkbox\" />\n                            <p>Project ID</p>\n                        </div>\n                    </div>\n                    <div className=\"admin_page_search\">\n                    <input type=\"text\" />\n                    <button><i class=\"fas fa-search\"></i></button>\n                    </div>\n                    <Projects_tests />\n                    <Projects_tests />\n                    <Projects_tests />\n                    <Next_btn />\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './super_admin_page.css';\nimport Header from '../header/Header';\nimport background from \"../../../assets/img/login_bg.png\";\n\nexport default class Super_admin_page extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        let background_page = {\n            backgroundImage: `url(${background})`,\n        }\n        return (\n            <div className=\"Admin_page\" style={background_page}>\n                <div className=\"admin_page_size\">\n                    <Header />\n                    <div className=\"add_new_project_btn\">\n                        <button>Create</button>\n                    </div>\n                    <div className=\"admin_page_inputs\">\n                        <div className=\"admin_page_inputs_filtr\">\n                            <input type=\"radio\" name=\"user\" checked />\n                            <p>Employer</p>\n                        </div>\n                        <div className=\"admin_page_inputs_filtr admin_page_inputs_filtr_2\">\n                            <input type=\"radio\" name=\"user\"  />\n                            <p>Admin</p>\n                        </div>\n                    </div>\n                    <div className=\"admin_page_search\">\n                    <input type=\"text\" placeholder=\"Email\" />\n                    <input type=\"text\" placeholder=\"Full name\" />\n                    <input type=\"text\" placeholder=\"role\" />\n                    \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport Page1 from \"./page1/Page1\";\nimport Admin_page from \"./admin_page/Admin_page\";\nimport Super_admin_page from \"./super_admin_page/Super_admin_page\";\nimport { GET } from '../../core/CRUD';\nimport { log } from 'util';\n\n\n\n\n\nexport default class Project extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            error: ''\n        };\n    }\n\n\n    async componentDidMount(){\n        let userId = localStorage.getItem('userId');\n        if(!userId){\n            return window.location.href = '/login';\n        }\n        let response = await GET(`api/users/${userId}`);\n        if(!response.success){\n            if(response.statusCode == 401){\n                return window.location.href = '/login';\n            }\n            return this.setState({error: response.error});\n        }\n        if(response.data.role === \"employer\"){\n            return window.location.href = '/page1';\n        }\n        else if(response.data.role === \"admin\"){\n            return window.location.href = '/admin_page';   \n        }\n        else if(response.data.role === \"superadmin\"){\n            return window.location.href = '/super_admin_page';   \n        }\n    }\n\n    render(){\n        return(\n            <div className=\"project\">\n             \n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport Login from \"./components/Login/Login.jsx\";\nimport Page1 from \"./components/project/page1/Page1\"\nimport {Route,NavLink} from \"react-router-dom\";\nimport Admin_page from \"./components/project/admin_page/Admin_page\";\nimport Project from \"./components/project/Project\";\nimport Super_admin_page from './components/project/super_admin_page/Super_admin_page';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path={'/'} exact={true} component={Login}  />\n      <Route path={'/login'} exact={true} component={Login}  />\n      <Route path={'/page1'} exact={true} component={Page1}  />\n      <Route path={'/Admin_page'} exact={true} component={Admin_page}  />\n      <Route path={'/Project'} exact={true} component={Project}  />\n      <Route path={'/super_admin_page'} exact={true} component={Super_admin_page} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\n \nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\"\nconst app = (\n    <BrowserRouter>\n        <App></App>\n    </BrowserRouter>\n)\nReactDOM.render(app, document.getElementById('root'));\n\n\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/login_bg.5f59f833.png\";"],"sourceRoot":""}