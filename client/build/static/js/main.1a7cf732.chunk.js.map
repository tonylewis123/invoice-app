{"version":3,"sources":["assets/img/logo.png","assets/img/user1.png","assets/img/Load.gif","assets/img/login_bg.png","core/configs.js","core/CRUD.js","components/Login/Login.jsx","components/project/header/Header.js","components/project/project_tests/Test.js","components/project/project_tests/Projects_tests.js","components/project/next_btn/Next_btn.js","components/project/next_btn/Prev_btn.js","components/project/page1/Page1.js","components/project/admin_page/Admin_page.js","components/project/super_admin_page/Super_admin_page.js","components/project/Project.js","components/project/header/HeaderSecond.js","components/project/save_btn/Save_btn.js","components/project/add_new_project/AddNewProject.js","components/project/first_project/First_project.js","components/project/expenses/Expenses_info.js","components/project/expenses/Expenses.js","components/project/new_task/NewTask.js","components/project/single_task/SingleTask.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CONFIGS","DOMAIN","GET","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","statusCode","responseObj","wrap","_context","prev","next","fetch","concat","method","headers","Accept","Content-Type","Authorization","localStorage","getItem","sent","status","json","abrupt","assign","t0","Error","message","stop","_x","apply","this","arguments","POST","_ref2","_callee2","data","_context2","body","JSON","stringify","_x2","_x3","DELETE","_ref4","_callee4","_context4","_x6","_x7","Login","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeInp","value","index","inputs","state","input","isTuched","keys","validation","map","elm","isValid","test","setState","error","loginUser","email","password","load","success","setItem","id","token","window","location","href","loginStyle","backgroundImage","loginBg","label","type","required","massage","_this2","react_default","createElement","className","style","src","Load","opacity","logo","Fragment","key","onChange","event","target","placeholder","onClick","React","Component","Header","userName","userInfo","userId","fullName","userImg","Test","name","date","hours","loc","Projects_tests","options","text","content","tasks","length","item","project_tests_Test","moment","taskDate","format","react_router_dom","to","_id","Dropdown","selection","fluid","Next_btn","Prev_btn","Page1","generateProjectsItem","projects","slice","count","view","created_at","projectId","project_tests_Projects_tests","changeNextPageHandle","console","log","changePrevPageHandle","reverse","background_page","background","Header_Header","Admin_page","filterProject","val","arr","filter","indexOf","project","sortProject","el","checked","sort","b","toLowerCase","Super_admin_page","role","users","changeInputHandle","element","radioInputChange","createUser","deleteUser","res","generateListItem","user","currentTarget","bind","Project","renderDashboard","Page1_Page1","Super_admin_page_Super_admin_page","Admin_page_Admin_page","HeaderSecond","Save_btn","btnClick","curr","Date","setDate","getDate","AddNewProject","inputValue","elem","saveProject","description","toConsumableArray","toISOString","substr","HeaderSecond_HeaderSecond","Input","defaultValue","FirstProject","generateProjectsTask","split","pop","ExpensesInfo","defaultclick","stopPropagation","editTaskMaterialsCost","newMaterialsCost","editTaskMaterialsDescription","newMaterialsDescription","task","newSupplier","urlData","taskId","supplier","materialsCost","materialsDescription","Expenses","ExpensesName","Expenses_info","expId","newTask","saveTask","taskName","expenses","materials_cost","materials_description","show_expensesInp","show_expenses","exp","clickCount","push","expenses_Expenses","SingleTask","editTaskName","newName","editTaskHourse","newHourse","editTaskDescription","newDescription","App","react_router","path","exact","component","NewTask","Boolean","hostname","match","app","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a7cf732.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c5069d2c.png\";","module.exports = __webpack_public_path__ + \"static/media/user1.a83af490.png\";","module.exports = __webpack_public_path__ + \"static/media/Load.1ac6a3f4.gif\";","module.exports = __webpack_public_path__ + \"static/media/login_bg.5f59f833.png\";","const HOST = 'localhost';\nconst PORT = 3000;\n\nconst CONFIGS = {\n  // DOMAIN: `http://${HOST}:${PORT}`\n  DOMAIN: 'https://invoiceeapp.herokuapp.com'\n};\n\nexport default CONFIGS;\n","import CONFIGS from './configs';\n\nexport const GET = async url => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem('userToken')}`\n      }\n    });\n    let statusCode = response.status;\n    let responseObj = await response.json();\n    \n    return Object.assign(responseObj, { statusCode });\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const POST = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem('userToken')}`\n      }\n    });\n    let statusCode = response.status;\n    let responseObj = await response.json();\n\n    return Object.assign(responseObj, { statusCode });\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const PUT = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem('userToken')}`\n      }\n    });\n    let statusCode = response.status;\n    let responseObj = await response.json();\n\n    return Object.assign(responseObj, { statusCode });\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const DELETE = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'DELETE',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem('userToken')}`\n      }\n    });\n    let statusCode = response.status;\n    let responseObj = await response.json();\n\n    return Object.assign(responseObj, { statusCode });\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n","import React from 'react';\r\nimport './login.css';\r\nimport logo from \"../../assets/img/logo.png\";\r\nimport loginBg from \"../../assets/img/login_bg.png\";\r\nimport {Route, NavLink} from \"react-router-dom\";\r\nimport { POST } from '../../core/CRUD';\r\nimport Load from \"../../assets/img/Load.gif\"\r\n\r\nexport default class Login extends React.Component {\r\n      constructor(props){\r\n          super(props);\r\n          this.state = {\r\n            inputs:[\r\n                {\r\n                    label: \"Email\",\r\n                    type: \"email\",\r\n                    isTuched: false,\r\n                    isValid: false,\r\n                    value: \"\",\r\n                    validation: {\r\n                        required: true,\r\n                        email: true\r\n                    },\r\n                    massage:'Please enter valid email!'\r\n                },\r\n                {\r\n                    label: \"Password\",\r\n                    type: \"password\",\r\n                    isTuched: false,\r\n                    isValid: false,\r\n                        value: \"\",\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    massage:'Please enter valid password!'\r\n                }\r\n            ],\r\n            error: \"\",\r\n            load: false\r\n          }\r\n      }\r\n\r\n      \r\n    onChangeInp = (value,index) => {\r\n        const inputs = this.state.inputs\r\n        const input = inputs[index];\r\n        input.value = value;\r\n        input.isTuched = true;\r\n        Object.keys(input.validation).map((elm)=>{\r\n            if(elm == \"required\"){\r\n                if(value == \"\" || value == null){\r\n                    input.isValid = false;\r\n                }\r\n                else{\r\n                    input.isValid = true\r\n                }\r\n\r\n            }else if (elm == \"email\"){\r\n                let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                if(re.test(value)){\r\n                    input.isValid = true;\r\n                }\r\n                else{\r\n                    input.isValid = false\r\n                }\r\n            }\r\n        })\r\n        this.setState({\r\n            inputs,\r\n            error: \"\"\r\n        })\r\n    }\r\n\r\n    loginUser = async data => {\r\n      let email = data[0].value;\r\n      let password = data[1].value;\r\n\r\n      if(email && password){\r\n        this.setState({load:true})\r\n        try {\r\n          let response = await POST('api/auth/login', { email, password });\r\n          if(response.success){\r\n            localStorage.setItem('userId', response.data.id);\r\n            localStorage.setItem('userToken', response.data.token);\r\n            window.location.href = '/Project';\r\n          } else {\r\n            this.setState({error: response.error, load:false});\r\n          }\r\n        } catch (error) {\r\n          this.setState({\r\n            error: error.message,\r\n            load: false\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          error: 'Username or password is empty!',\r\n          load: false\r\n        });\r\n      }\r\n    }\r\n\r\n     loginStyle = {\r\n        backgroundImage: `url(${loginBg})`,\r\n      }\r\n    render(){\r\n    \r\n        return(\r\n            <div className=\"Login\" style={this.loginStyle}>\r\n              { this.state.load ? <img src={Load}  className=\"loading\" /> : null }\r\n                <div className=\"login_size\" style={this.state.load?{opacity:.2}:{} } >\r\n                <div className=\"login_top\">\r\n                    <img src={logo} />\r\n                </div>\r\n                <div className=\"login_inputs\">\r\n                  {this.state.inputs.map((elm, index)=>{\r\n                      return(\r\n                          <>\r\n                          <p className=\"error_message\">{elm.isTuched && !elm.isValid?elm.massage:''}</p>\r\n                          <p className=\"error_message\">{this.state.error}</p>\r\n                          <input key={index} type={elm.type} value={elm.value} onChange={event=>this.onChangeInp(event.target.value,index)} placeholder={elm.label} />\r\n                          </>\r\n                      )\r\n                  })}\r\n                <button onClick={() => this.loginUser(this.state.inputs)}>Login</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './header.css';\r\nimport userImg from \"../../../assets/img/user1.png\";\r\nimport { GET } from '../../../core/CRUD';\r\n\r\n\r\nexport default class Header extends React.Component {\r\n      constructor(props){\r\n          super(props);\r\n          this.state = {\r\n              userName: \"\",\r\n              userInfo: \"\"\r\n          }\r\n      }\r\n      async componentDidMount(){\r\n        let userId = localStorage.getItem('userId');\r\n        let response = await GET(`api/users/${userId}`);\r\n        this.setState({\r\n            userName: response.data.fullName\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"Header\">\r\n                    <div className=\"header_size\">\r\n                        <div className=\"header_size_left\">\r\n                            <img src={userImg} />\r\n                        </div>\r\n                        <div className=\"header_size_right\">\r\n                            <p className=\"Employer_Name\">{this.state.userName}</p>\r\n                            <p className=\"Employer_info\">{this.state.userInfo}</p>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport \"./project_tests.css\";\r\n\r\n\r\n\r\nclass Test extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n\r\n        \r\n        return(\r\n            <div>\r\n                <p className=\"text_tittle\">{this.props.name}</p>\r\n                <div className=\"test_flex\">\r\n                <p>{this.props.date}</p>\r\n                <p>{this.props.hours}</p>\r\n                <div> {this.props.loc} </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Test","import React from 'react';\r\nimport { Dropdown, Header } from 'semantic-ui-react';\r\nimport \"./project_tests.css\";\r\nimport Test from \"./Test.js\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\n\r\n\r\nclass Projects_tests extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n\r\n\r\n    const options = [\r\n      {\r\n        key: 1,\r\n        text: this.props.data.name,\r\n        value: 1,\r\n        content: this.props.data.tasks.length ? this.props.data.tasks.map((item, index) => {\r\n          return (<div key={index} className=\"taskBox\">\r\n                  <Test   name= {item.name} hours={item.hours+ \" h\"} date={moment(item.taskDate).format('L')} loc={<NavLink to={`/SingleTask/${item._id}`}><p><i className=\"fas fa-arrow-circle-right\" /></p></NavLink>} />\r\n                 </div>)\r\n        }) : \"\",\r\n      },\r\n    ]\r\n    return (\r\n      <div className=\"ProjectTests\">\r\n        <Dropdown selection fluid options={options} placeholder={this.props.data.name} />\r\n        <NavLink to={`/single_project/${this.props.data._id}`}><p><i className=\"fas fa-arrow-circle-right\" /></p></NavLink>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Projects_tests","import React from 'react';\nimport './next_btn.css';\n\nexport default function Next_btn(props){\n        return(\n            <div className=\"next_btn_div\">\n            <button onClick={props.onClick} className=\"next_btn\">next <i className=\"fas fa-arrow-right\" /> </button>\n            </div>\n        )\n}","import React from 'react';\nimport './next_btn.css';\n\nexport default function Prev_btn(props){\n        return(\n            <div className=\"next_btn_div\">\n            <button onClick={props.onClick} className=\"next_btn\"><i className=\"fas fa-arrow-left\" />prev</button>\n            </div>\n        )\n}","import React from 'react';\r\nimport './page1.css';\r\nimport Header from '../header/Header';\r\nimport background from \"../../../assets/img/login_bg.png\";\r\nimport Projects_tests from \"../project_tests/Projects_tests\";\r\nimport { POST, GET } from '../../../core/CRUD';\r\nimport moment from \"moment\";\r\nimport Load from \"../../../assets/img/Load.gif\";\r\nimport Next_btn from \"../next_btn/Next_btn\";\r\nimport Prev_btn from \"../next_btn/Prev_btn\";\r\n\r\n\r\nexport default class Page1 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: [],\r\n            load: true,\r\n            count: 0,\r\n            view: 4,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let userId = localStorage.getItem('userId');\r\n        \r\n        \r\n        if (!userId) {\r\n            return window.location.href = '/login';\r\n        }\r\n        let response = await GET(`api/users/${userId}`);\r\n        console.log(response);\r\n        if (!response.success) {\r\n            if (response.statusCode == 401) {\r\n                return window.location.href = '/login';\r\n            }\r\n            return this.setState({ error: response.error });\r\n        }\r\n        this.setState({ projects: response.data.projects.reverse(), load: false });\r\n    }\r\n    generateProjectsItem = () => {\r\n        let projects = this.state.projects;\r\n        return projects.slice(this.state.count * this.state.view, (this.state.count + 1) * this.state.view).map((item, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <div className=\"project_info\">\r\n                        <p>{moment(item.created_at).format('L')}</p>\r\n                        <p>{item.projectId}</p>\r\n\r\n                    </div>\r\n                    <Projects_tests data={item} />\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    changeNextPageHandle = () => {\r\n        \r\n        // if((this.state.count + 1) * this.state.view >= this.state.projects.length-1){\r\n        //     return\r\n        // }\r\n        this.setState({\r\n            count:this.state.count + 1\r\n        })\r\n        console.log(this.state.count * this.state.view)\r\n    }\r\n\r\n    changePrevPageHandle = () => {\r\n        // if(this.state.count <= 0){\r\n        //     return\r\n        // }\r\n        this.setState({\r\n            count:this.state.count - 1\r\n        })\r\n        console.log(this.state.projects)\r\n    }\r\n    render() {\r\n        console.log(this.state.projects);\r\n        \r\n        let background_page = {\r\n            backgroundImage: `url(${background})`,\r\n        }\r\n        return (\r\n            <div className=\"Page1\" style={background_page}>\r\n                 { this.state.load ? <img src={Load}  className=\"loading\" /> : null }\r\n                <div className=\"page1_size\" style={this.state.load?{opacity:.2}:{} }>\r\n                    <Header />\r\n                    {this.state.projects.length > 0 ? this.generateProjectsItem() : \"\"}\r\n                    {/* <div className=\"page1_clear_top\"></div> */}\r\n                    <div className=\"admin_p_clear_top\">\r\n                        {this.state.count>0 && <Prev_btn onClick={this.changePrevPageHandle} />}\r\n                        {(this.state.count + 1) * this.state.view <= this.state.projects.length-1 && <Next_btn onClick={this.changeNextPageHandle} />}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './admin_page.css';\nimport Header from '../header/Header.js';\nimport background from \"../../../assets/img/login_bg.png\";\nimport Projects_tests from \"../project_tests/Projects_tests\";\nimport Next_btn from \"../next_btn/Next_btn\";\nimport Prev_btn from \"../next_btn/Prev_btn\";\nimport { NavLink } from \"react-router-dom\";\nimport { POST, GET } from '../../../core/CRUD';\nimport moment from \"moment\";\nimport Load from \"../../../assets/img/Load.gif\"\n\n\n\nexport default class Admin_page extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            projects: [],\n            project: [],\n            filter: 'projectId',\n            val: \"\",\n            count: 0,\n            view: 4,\n            load: true\n        }\n    }\n    async componentDidMount() {\n       \n        let userId = localStorage.getItem('userId');\n        if (!userId) {\n            return window.location.href = '/login';\n        }\n        let response = await GET(`api/users/${userId}`);\n        if (!response.success) {\n            if (response.statusCode == 401) {\n                return window.location.href = '/login';\n            }\n            return this.setState({ error: response.error });\n        }\n        this.setState({\n            projects: response.data.projects.reverse(),\n            project: response.data.projects.reverse(),\n            load: false\n        });\n\n    }\n    generateProjectsItem = () => {\n        const projects = this.state.projects;\n        // const newP = projects.splice(this.state.page, this.state.limit);\n        \n        return projects.slice(this.state.count * this.state.view, (this.state.count + 1) * this.state.view).map((item, index) => {\n            return (\n                <div key={index}>\n                    <div className=\"project_info\">\n                        <p>{moment(item.created_at).format('L')}</p>\n                        <p>{item.projectId}</p>\n\n                    </div>\n                    <Projects_tests data={item} />\n                </div>\n            )\n        })\n    }\n    filterProject = (val) => {\n\n        let arr = this.state.projects.filter(item => {\n\n            //    whiteList.indexOf(event.type) > -1\n            return item.name.indexOf(val) > -1\n        })\n  \n        if (val == \"\") {\n            this.setState({ projects: this.state.project })\n        } else {\n            this.setState({ projects: arr })\n        }\n\n    }\n    sortProject = (el, name) => {\n\n        if (el.checked) {\n            let projects = this.state.projects;\n           \n            projects.sort((a, b) => {\n\n                if (a[name].toLowerCase() < b[name].toLowerCase()) {\n                    return -1;\n                }\n                if (a[name].toLowerCase() > b[name].toLowerCase()) {\n                    return 1;\n                }\n                return 0;\n            })\n            this.setState({ projects })\n        }\n\n\n    }\n\n    changeNextPageHandle = () => {\n        \n        // if((this.state.count + 1) * this.state.view >= this.state.projects.length-1){\n        //     return\n        // }\n        this.setState({\n            count:this.state.count + 1\n        })\n\n    }\n\n    changePrevPageHandle = () => {\n        // if(this.state.count <= 0){\n        //     return\n        // }\n        this.setState({\n            count:this.state.count - 1\n        })\n\n    }\n\n    \n\n    render() {\n        let background_page = {\n            backgroundImage: `url(${background})`,\n        }\n        \n        return (\n            <div className=\"Admin_page\" style={background_page}>\n                                 { this.state.load ? <img src={Load}  className=\"loading\" /> : null }\n                <div className=\"admin_page_size\" style={this.state.load?{opacity:.2}:{} }>\n                    <Header />\n\n                    <div className=\"add_new_project_btn\">\n\n                        <NavLink to={\"/NewProject\"}> <button><i className=\"fas fa-plus\" /> Add new project</button> </NavLink>\n                    </div>\n                    <div className=\"admin_page_inputs\">\n                        <div className=\"admin_page_inputs_filtr\">\n                            <input type=\"radio\" name=\"checkbox\" onChange={event => this.sortProject(event.target, 'created_at')} />\n                            <p>DD/MM/YY</p>\n                        </div>\n                        <div className=\"admin_page_inputs_filtr admin_page_inputs_filtr_2\">\n                            <input type=\"radio\" name=\"checkbox\" onChange={event => this.sortProject(event.target, 'projectId')} />\n                            <p>Project ID</p>\n                        </div>\n                    </div>\n                    <div className=\"admin_page_search\">\n                        <input type=\"text\" onChange={(event) => this.setState({ val: event.target.value })} />\n                        <button onClick={event => this.filterProject(this.state.val)}><i className=\"fas fa-search\" /></button>\n                    </div>\n\n                    {this.state.projects.length > 0 ? this.generateProjectsItem() : \"\"}\n\n                    <div className=\"admin_p_clear_top\">\n                        {this.state.count>0 && <Prev_btn onClick={this.changePrevPageHandle} />}\n                        {(this.state.count + 1) * this.state.view <= this.state.projects.length-1 && <Next_btn onClick={this.changeNextPageHandle} />}\n                    </div>\n                    <div>\n                       \n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './super_admin_page.css';\nimport Header from '../header/Header';\nimport background from \"../../../assets/img/login_bg.png\";\nimport { POST, GET, DELETE } from \"../../../core/CRUD\"\nimport { async } from 'q';\nimport Load from \"../../../assets/img/Load.gif\"\n\nexport default class Super_admin_page extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        inputs: {\n            email: {\n                value: '',\n                isTuched: false,\n                isValid: false,\n                massage: 'Please enter valid email!',\n            },\n            name: {\n                value: '',\n                isTuched: false,\n                isValid: false,\n                massage: 'Please enter name',\n            },\n            role: {\n                value: \"employee\"\n            },\n        },\n        users: [],\n        error: \"\",\n        load: true,\n        \n\n    }\n\n   async componentDidMount (){\n        let res = await  GET('api/admin/usersList');\n        if(!res.success){\n           return this.setState({error: res.error}); \n        } \n        this.setState({users: res.data, load: false});   \n    }\n\n    changeInputHandle = (element, value) => {\n        if (element === 'email') {\n            let email = this.state.inputs.email;\n            email.value = value;\n            let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            if (re.test(value)) {\n                email.isTuched = true;\n                email.isValid = true\n            } else {\n                email.isTuched = true;\n                email.isValid = false\n            }\n            this.setState({ email })\n\n        } else if (element === 'name') {\n            let name = this.state.inputs.name;\n            name.value = value;\n            if (value === '' || value === null) {\n                name.isTuched = true;\n                name.isValid = false\n            } else {\n                name.isTuched = true;\n                name.isValid = true\n            }\n            this.setState({ name })\n\n        }\n    }\n\n    radioInputChange = name => {\n        let role = this.state.inputs.role;\n        role.value = name;\n        this.setState({ role })\n    }\n    createUser = async(data) => {\n        this.setState({load: true})\n        let { email, name, role } = data;\n        if (!email.value || !name.value || !role.value) {\n            return this.setState({ error: 'All fields are required!', load: false });\n        }\n\n        let response = await POST('api/admin/create_user', {\n            email: email.value,\n            role: role.value,\n            fullName: name.value\n        });\n        if(!response.success){\n            return this.setState({error: response.error, load: false});\n        }\n        email.value = '';\n        name.value = '';\n        this.setState({users: response.data, error: '',inputs:data, load: false });\n    }\n\n    deleteUser = async (userId) => {\n        this.setState({load:true})\n        let res = await DELETE('api/admin/delete_user', { userId });\n        if(!res.success){\n            return this.setState({error: res.error, load: false});\n        }\n        this.setState({\n            users: res.data,\n            error: '',\n            load: false\n        });\n    }\n\n    generateListItem = data => {\n        return data.map((user, index) => {\n            return(\n                <tr key = { index } className=\"user_list\">\n                  <td>{index + 1}</td>  <td> { user.email }</td> <td> {user.fullName} </td> <td>{ user.role }</td> <td> <button onClick={() => this.deleteUser(user._id)}\n                    >delete</button> </td>\n                </tr>\n            )\n        })\n    }\n\n    render() {\n        let background_page = {\n            backgroundImage: `url(${background})`,\n        }\n        return (\n            <div className=\"Admin_page\" style={background_page}>\n                { this.state.load ? <img src={Load}  className=\"loading\" /> : null }\n                <div className=\"admin_page_size\" style={this.state.load?{opacity:.2}:{}}>\n                    <Header />\n                    {this.state.error? <div> <p className=\"error_message\">{this.state.error}</p> </div> : null}\n                    <div className=\"sup_admin_clear\"></div>\n                    <div className=\"sup_admin_page_search\">\n                        <p>{this.state.inputs.email.isTuched && !this.state.inputs.email.isValid ? this.state.inputs.email.massage : ''}</p>\n                        <input type=\"text\" placeholder=\"Email\" value={this.state.inputs.email.value} onChange={event => this.changeInputHandle('email', event.currentTarget.value)} />\n                        <p> {this.state.inputs.name.isTuched && !this.state.inputs.name.isValid ? this.state.inputs.name.massage : ''} </p>\n                        <input type=\"text\" placeholder=\"Full name\" value={this.state.inputs.name.value} onChange={event => this.changeInputHandle('name', event.currentTarget.value)} />\n                    </div>\n                    <div className=\"admin_page_inputs\">\n                        <div className=\"admin_page_inputs_filtr\">\n                            <input type=\"radio\" name=\"user\" checked value = 'employer' onChange = { this.radioInputChange.bind(this, 'employer') }/>\n                            <p>Employee</p>\n                        </div>\n                        <div className=\"admin_page_inputs_filtr admin_page_inputs_filtr_2\">\n                            <input type=\"radio\" name=\"user\" value = 'admin' onChange = { this.radioInputChange.bind(this, 'admin') } />\n                            <p>Admin</p>\n                        </div>\n                    </div>\n                    <div className=\"add_new_project_btn\">\n                        <button onClick={async () => this.createUser(this.state.inputs)} >Create</button>\n                    </div>\n                    <div  className=\"user_table_content\">\n                    <table className=\"users_list\">\n                        <thead>\n                            <tr>\n                                <th>N</th>\n                                <th>Email</th>\n                                <th>Fullname</th>\n                                <th>Role</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.users.length > 0 ? this.generateListItem(this.state.users) : \"\" }\n                        </tbody>\n                    </table>\n                    </div>\n                    <div className=\"sup_admin_clear\"></div>\n                </div>\n            </div>\n        )\n    }\n    \n}","import React from 'react';\nimport Page1 from \"./page1/Page1\";\nimport Admin_page from \"./admin_page/Admin_page\";\nimport Super_admin_page from \"./super_admin_page/Super_admin_page\";\nimport { GET } from '../../core/CRUD';\nimport { log } from 'util';\nimport Load from \"../../assets/img/Load.gif\"\n\n\n\n\n\nexport default class Project extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            error: '',\n            user: '',\n            load: true\n        };\n    }\n\n\n    async componentDidMount(){\n        let userId = localStorage.getItem('userId');\n        if(!userId){\n            return window.location.href = '/login';\n        }\n        let response = await GET(`api/users/${userId}`);\n        if(!response.success){\n            if(response.statusCode == 401){\n                return window.location.href = '/login';\n            }\n            return this.setState({error: response.error});\n        }\n        this.setState({user: response.data, load: false});\n    }\n\n    renderDashboard = user => {\n        if(user.role && user.role === 'employee'){\n          return (<Page1 user={user}/>);\n        }\n        if(user.role && user.role === 'superadmin'){\n          return (<Super_admin_page user={user}/>);\n        }\n        if(user.role && user.role === 'admin'){\n          return (<Admin_page user={user}/>);\n        }\n      }\n\n    render(){\n        return(\n            <div className=\"project\">\n            \n                { this.state.load ? <img src={Load}  className=\"loading\" /> : null }\n               <div>\n               { this.state.user ? this.renderDashboard(this.state.user) : null }\n               </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './header.css';\nimport {NavLink} from \"react-router-dom\";\n\nexport default class HeaderSecond extends React.Component {\n      constructor(props){\n          super(props);\n          this.state = {\n              userName: \"\",\n              userInfo: \"\"\n          }\n      }\n\n    render(){\n        return(\n            <div className=\"HeaderSecond\">\n                    <div className=\"sec_header_size\">\n                        <div className=\"sec_header_size_left\">\n                            <p className=\"head_arrow_left\">\n                                <NavLink to={this.props.loc}><i className=\"fas fa-arrow-left\" /></NavLink>\n                                </p>\n                        </div>\n                        <div className=\"sec_header_size_right\">\n                            <p className=\"sec_head_tittle\">{this.props.name}</p>\n                        </div>\n                    </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './save_btn.css';\n\nexport default  props => {\n        return(\n            <div className=\"next_btn_div\">\n            <button onClick={props.btnClick} className=\"next_btn\">Save </button>\n            </div>\n        )\n}","import React from 'react';\nimport './AddNewProject.css';\nimport HeaderSecond from '../header/HeaderSecond';\nimport background from \"../../../assets/img/login_bg.png\";\nimport Projects_tests from \"../project_tests/Projects_tests\";\nimport { NavLink } from \"react-router-dom\";\nimport { Input } from 'semantic-ui-react';\nimport Next_btn from \"../next_btn/Next_btn\";\nimport Prev_btn from \"../next_btn/Prev_btn\";\nimport Save_btn from \"../save_btn/Save_btn\";\nimport { POST, GET } from '../../../core/CRUD';\nimport moment from \"moment\";\nimport Load from \"../../../assets/img/Load.gif\"\n\nvar curr = new Date();\ncurr.setDate(curr.getDate());\nexport default class AddNewProject extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputs: [\n                {\n                    label: \"Project Name\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter name'\n                },\n                {\n                    label: \"Project Date\",\n                    isTuched: false,\n                    isValid: false,\n                    value: curr.toISOString().substr(0, 10),\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter date'\n                },\n                {\n                    label: \"description\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter description'\n                }\n            ],\n            error: \"\",\n            projects: [],\n            load: true,\n            count: 0,\n            view: 4,\n        }\n    }\n\n    async componentDidMount() {\n        let userId = localStorage.getItem('userId');\n        if (!userId) {\n            return window.location.href = '/login';\n        }\n        let response = await GET(`api/users/${userId}`);\n        if (!response.success) {\n            if (response.statusCode == 401) {\n                return window.location.href = '/login';\n            }\n            return this.setState({ error: response.error });\n        }\n        this.setState({ projects: response.data.projects.reverse(), load: false });\n    }\n\n\n    inputValue = (value, index) => {\n        let inputs = this.state.inputs;\n        let input = inputs[index];\n        Object.keys(input.validation).map((elem) => {\n            if (elem == \"required\") {\n                if (value == \"\" || value == null) {\n                    input.isValid = false;\n                }\n                else {\n                    input.isValid = true\n                }\n\n            }\n        });\n        input.isTuched = true;\n        input.value = value;\n        this.setState({ inputs, error: \"\" })\n\n    }\n    saveProject = async () => {\n        let inputs = [...this.state.inputs];\n        let name = inputs[0].value;\n        let date = inputs[1].value;\n        let description = inputs[2].value;\n        this.setState({load:true})\n        if (name === '' || date === '' || description === '') {\n            return this.setState({ error: 'All fields are required!', load:false});\n        }\n\n        let response = await POST('api/users/createProject', {\n            name: name,\n            date: date,\n            description: description\n        });\n\n        console.log(response.data.projects);\n\n        if (!response.success) {\n            return this.setState({ error: response.error});\n        }\n        name = '';\n        description = '';\n        this.setState({ projects: response.data.projects.reverse(), error: '', inputs, load: false });\n        console.log(this.state.projects);\n    }\n\n    generateProjectsItem = () => {\n        let projects = this.state.projects\n        return projects.slice(this.state.count * this.state.view, (this.state.count + 1) * this.state.view).map((item, index) => {\n            return (\n                <div key={index}>\n                    <div className=\"project_info\">\n                        <p>{moment(item.created_at).format('L')}</p>\n                        <p>{item.projectId}</p>\n                        \n                    </div>\n                    <Projects_tests data={item}  />\n                </div>\n            )\n        })\n    }\n    changeNextPageHandle = () => {\n        \n        // if((this.state.count + 1) * this.state.view >= this.state.projects.length-1){\n        //     return\n        // }\n        this.setState({\n            count:this.state.count + 1\n        })\n        console.log(this.state.count * this.state.view)\n    }\n\n    changePrevPageHandle = () => {\n        // if(this.state.count <= 0){\n        //     return\n        // }\n        this.setState({\n            count:this.state.count - 1\n        })\n        console.log(this.state.projects)\n    }\n    render() {\n        let background_page = {\n            backgroundImage: `url(${background})`,\n        }\n\n        return (\n            <div className=\"Admin_page\" style={background_page}>\n                  { this.state.load ? <img src={Load}  className=\"loading\" /> : null }\n                <div className=\"admin_page_size\" style={this.state.load?{opacity:.2}:{}}>\n                    <HeaderSecond name=\"New Project\" loc=\"/Project\" />\n                    <div className=\"new_project\">\n                        <div className=\"new_project_box\">\n                            <p>Project Name</p>\n                            <Input type=\"text\" onChange={event => this.inputValue(event.target.value, 0)} value={this.state.inputs[0].value} />\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[0].isTuched && !this.state.inputs[0].isValid ? this.state.inputs[0].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Project Date</p>\n                            <Input type=\"date\" defaultValue={this.state.inputs[1].value} onChange={event => this.inputValue(event.target.value, 1)} />\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[1].isTuched && !this.state.inputs[1].isValid ? this.state.inputs[1].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Description</p>\n                            <Input type=\"text\" className=\"discrip_inp\" onChange={event => this.inputValue(event.target.value, 2)} value={this.state.inputs[2].value} />\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[2].isTuched && !this.state.inputs[2].isValid ? this.state.inputs[2].massage : ''}</p>\n                    </div>\n                    <div className=\"addNewPrClear_top\" >\n                        <p className=\"error_message\">{this.state.error}</p>\n                        <div className=\"addNPClear\"></div>\n                        <Save_btn btnClick={this.saveProject} />\n                    </div>\n                    {this.state.projects.length > 0 ? this.generateProjectsItem() : \"\"}\n\n  \n\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './firstProject.css';\nimport HeaderSecond from '../header/HeaderSecond';\nimport background from \"../../../assets/img/login_bg.png\";\nimport { NavLink } from \"react-router-dom\";\nimport { POST, GET } from '../../../core/CRUD';\nimport queryString from 'query-string';\nimport Load from \"../../../assets/img/Load.gif\"\n\n\n\nexport default class FirstProject extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n                    project: {},\n                    error: \"\",\n                    load: true,\n                    \n        }\n    }\n\n    async componentWillMount() {\n        let projectId = window.location.href.split(\"/\").pop();\n         let response = await GET(`api/projects/${projectId}`);\n         if (!response.success) {\n            if (response.statusCode == 401) {\n                return window.location.href = '/login';\n            }\n            return this.setState({ error: response.error });\n        }\n        this.setState({ project: response.data, load: false });\n\n    }\n\n\n    generateProjectsTask = () => {\n        let tasks = this.state.project.tasks; \n\n        \n       return tasks.map((item, index) => {\n            return (\n                <div className=\"taskInformation\" key={index}>\n                <p>{item.name}</p>\n                <p>{item.hours+\" h\"}</p>\n                <NavLink to={`/SingleTask/${item._id}`}><p><i className=\"fas fa-arrow-circle-right\" /></p></NavLink>\n            </div>\n            )\n        })\n    }\n    render() {\n      \n        \n        let background_page = {\n            backgroundImage: `url(${background})`,\n        }\n        return (\n            <div className=\"Admin_page\" style={background_page}>\n                 { this.state.load ? <img src={Load}  className=\"loading\" /> : null }\n                <div className=\"admin_page_size\" style={this.state.load?{opacity:.2}:{} }>\n                    <HeaderSecond name={this.state.project.name} loc=\"/Project\" />\n                    <div className=\"add_new_project_btn\">\n\n                        <NavLink to={`/single_project/${this.state.project._id}/New_task`}> <button><i className=\"fas fa-plus\" /> Add new task</button> </NavLink>\n                    </div>\n                    <div className=\"admin_page_search\">\n                        <input type=\"text\" />\n                        <button><i className=\"fas fa-search\" /></button>\n                    </div>\n                    <div className=\"firstProject_clear\"></div>\n                    {this.state.project.tasks?this.state.project.tasks.length > 0 ? this.generateProjectsTask() : \"\":''}\n\n\n\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./expenses.css\";\nimport { POST, GET } from '../../../core/CRUD';\nimport { Input } from 'semantic-ui-react';\n\n\n\nclass ExpensesInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n\n         this.state = {\n             error: \"\",\n            task : [],\n            newSupplier: false,\n            newMaterialsCost: false,\n            newMaterialsDescription: false\n         }\n    }\n\n    async componentDidMount() {\n\n        let urlData = window.location.href.split(\"/\");\n        let taskId = urlData[urlData.length-1];\n\n        \n         let response = await GET(`api/tasks/${taskId}`);\n         if (!response.success) {\n            if (response.statusCode == 401) {\n                return window.location.href = '/login';\n            }\n            return this.setState({ error: response.error });\n        }  \n        this.setState({ task: response.data, load: false });    \n        console.log(this.state.task, \"qwe\");\n        \n    }\n\n    defaultclick = event => {\n        event.stopPropagation();\n    }\n    editTaskMaterialsCost = () =>{\n        this.setState({newMaterialsCost: true})\n    }\n    editTaskMaterialsDescription = () =>{\n        this.setState({newMaterialsDescription: true})\n    }\n    render() {\n        return (\n            <div className=\"ExpensesInfo\">\n                <div className=\"new_project\" onClick={event => this.defaultclick(event)}>\n                    <div className=\"new_project_box\">\n                        <p>Supplier</p>\n                        <select >\n                            <option>\n                            {typeof this.props.element !== 'undefined' ? this.props.element.supplier : ''}\n                                </option>\n                            <option>\n                                2\n                                </option>\n                            <option>\n                                3\n                                </option>\n                        </select>\n                    </div>\n                   \n                    \n                    <div className=\"new_project_box\">\n                        <p>Materials <br /> cost</p>\n                        <div className=\"materialsCost\">\n                            <p>{typeof this.props.element !== 'undefined' && this.state.newMaterialsCost ? <Input type=\"text\" /> : this.props.element.materialsCost}</p>\n                            <p onClick={this.editTaskMaterialsCost}> {this.state.newMaterialsCost ? <i className=\"fas fa-check\" /> : <i className=\"fas fa-pencil-alt\" />} </p>\n                        </div>\n                    </div>\n\n                    <div className=\"new_project_box\">\n                        <p>Materials <br /> description</p>\n                        <div className=\"materialsCost\">\n                            <p>{typeof this.props.element !== 'undefined' && this.state.newMaterialsDescription ? <Input type=\"text\" /> : this.props.element.materialsDescription}</p>\n                            <p onClick={this.editTaskMaterialsDescription}>   {this.state.newMaterialsDescription? <i className=\"fas fa-check\" /> : <i className=\"fas fa-pencil-alt\" />} </p>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default ExpensesInfo","import React from 'react';\nimport { Dropdown, Header } from 'semantic-ui-react';\nimport \"./expenses.css\";\nimport {NavLink} from \"react-router-dom\";\nimport ExpensesInfo from \"./Expenses_info\";\n \n\n\n\n\nclass Expenses extends React.Component  {\n      constructor(props){\n        super(props);\n        this.state = {\n          ExpensesName: \"Expenses\",\n          \n        }\n      }\n      render(){ \n        console.log(this.props.element, \"dsfdsgdfgdfgdfgdfgdfg\");\n        \n        \n        const options = [\n          {\n            key: 1,\n            text: this.state.ExpensesName,\n            value: 1,\n            content: <ExpensesInfo element={this.props.element} />,\n          },\n        ]\n        return(\n          <div className=\"Expenses\">\n          <Dropdown selection fluid options={options} placeholder={this.props.element.expId>1 ? this.state.ExpensesName + \" (\" + this.props.element.expId  + \")\"  : this.state.ExpensesName  } />\n       </div>\n        )\n      }\n      \n}\n\n\n\nexport default Expenses","import React from 'react';\nimport './newTask.css';\nimport HeaderSecond from '../header/HeaderSecond';\nimport background from \"../../../assets/img/login_bg.png\";\nimport { Input } from 'semantic-ui-react';\nimport Save_btn from \"../save_btn/Save_btn\";\nimport { POST, GET } from '../../../core/CRUD';\nimport Expenses from \"../expenses/Expenses\";\nimport { NavLink } from \"react-router-dom\";\nimport Load from \"../../../assets/img/Load.gif\"\nimport { log } from 'util';\n\nvar curr = new Date();\ncurr.setDate(curr.getDate());\n\nexport default class newTask extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks : [],\n            inputs: [\n                {\n                    label: \"Task Name\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter name'\n                },\n                    {\n                    label: \"Task Date\",\n                    isTuched: false,\n                    isValid: false,\n                    value: curr.toISOString().substr(0, 10),\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter date'\n                },\n                {\n                    label: \"Hours\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter hours'\n                },\n                {\n                    label: \"description\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter description'\n                },\n                {\n                    label: \"Supplier\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"1\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: ''\n                },\n                {\n                    label: \"Materials cost\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter Materials cost'\n                },\n                {\n                    label: \"materials description\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter materials description'\n                },\n            ],\n            error: \"\",\n            expenses: [],\n            show_expenses: false,\n            clickCount : 1,\n            load: false,\n            projectId: ''\n        }\n    }\n\n\n    async componentDidMount() {\n        let urlData = window.location.href.split(\"/\");\n        let projectId = urlData[urlData.length-2];\n        \n         let response = await GET(`api/projects/${projectId}`);\n         if (!response.success) {\n            if (response.statusCode == 401) {\n                return window.location.href = '/login';\n            }\n            return this.setState({ error: response.error });\n        }\n        \n        this.setState({ tasks: response.data.tasks, projectId: response.data._id });\n    }\n\n    saveTask = async (state) => {\n        // this.setState({load:true})\n        let inputs = [...this.state.inputs];\n        let taskName = inputs[0].value;\n        let taskDate = inputs[1].value;\n        let hours = inputs[2].value;\n        let description = inputs[3].value;\n        \n        let expenses = state.expenses.map(item => {\n            return {\n                supplier: item.supplier,\n                materialsCost: item.materials_cost,\n                materialsDescription: item.materials_description\n            };\n        });\n\n        if (taskName === '' || taskDate === '' || hours === '' || description === '' ) {\n            return this.setState({ error: 'All fields are required!', load: false });\n        }\n\n        let response = await POST('api/tasks', {\n            name: taskName,\n            taskDate: taskDate,\n            hours: hours,\n            description: description,\n            expenses: expenses,\n            projectId: state.projectId\n        });\n        \n        if (!response.success) {\n            return this.setState({ error: response.error});\n        }\n        \n        \n    }\n\n    inputValue = (value, index) => {\n        let inputs = this.state.inputs;\n        let input = inputs[index];\n        Object.keys(input.validation).map((elem) => {\n            if (elem == \"required\") {\n                if (value == \"\" || value == null) {\n                    input.isValid = false;\n                }\n                else {\n                    input.isValid = true\n                }\n\n            }\n        });\n        input.isTuched = true;\n        input.value = value;\n        this.setState({ inputs })\n\n    }\n    show_expensesInp = () =>{\n        this.setState({\n            show_expenses: true,\n        })\n        if(this.state.inputs[5].isValid && this.state.inputs[6].isValid){ \n            let expenses = [...this.state.expenses]\n            let exp =  {\n                supplier: this.state.inputs[4].value,\n                materials_cost: this.state.inputs[5].value,\n                materials_description: this.state.inputs[6].value,\n                expId: this.state.clickCount\n             }\n            expenses.push(exp);\n            let inputs =  this.state.inputs;\n            inputs[5].value = '';\n            inputs[6].value = '';\n          return  this.setState({\n                clickCount:this.state.clickCount+1,\n                 expenses,  \n                 inputs\n            })\n        }\n    }\n\n    render() {\n        let background_page = {\n            backgroundImage: `url(${background})`,\n        }\n\n        return (\n            <div className=\"Admin_page\" style={background_page}>\n                                { this.state.load ? <img src={Load}  className=\"loading\" /> : null }\n                <div className=\"admin_page_size\" style={this.state.load?{opacity:.2}:{}}>\n                    <HeaderSecond name=\"New Task\" loc=\"/Project\" />\n                    <div className=\"new_project\">\n                        <p className=\"error_message\">{this.state.inputs[0].isTuched && !this.state.inputs[0].isValid ? this.state.inputs[0].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Task Name</p>\n                            <Input type=\"text\" defaultValue={this.state.inputs[0].value} onChange={event => this.inputValue(event.target.value, 0)} />\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[1].isTuched && !this.state.inputs[1].isValid ? this.state.inputs[1].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Task Date</p>\n                            <Input type=\"date\" defaultValue={this.state.inputs[1].value} onChange={event => this.inputValue(event.target.value, 1)} />\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[2].isTuched && !this.state.inputs[2].isValid ? this.state.inputs[2].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Hours</p>\n                            <Input type=\"number\" onChange={event => this.inputValue(event.target.value, 2)} value={this.state.inputs[2].value} />\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[3].isTuched && !this.state.inputs[3].isValid ? this.state.inputs[3].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Description</p>\n                            <Input type=\"text\" className=\"discrip_inp\" onChange={event => this.inputValue(event.target.value, 3)} value={this.state.inputs[3].value} />\n                        </div>\n\n                        <div className=\"create_expenses_box\" >\n                            <div className=\"create_expenses\" onClick={this.show_expensesInp}>\n                                <p> <i className=\"fas fa-plus\" /></p>\n                                <p className=\"create_expenses_tittle\">Expenses</p>\n                            </div>\n                        </div>\n\n                    </div>\n                   \n                    {this.state.show_expenses ?  <div className=\"new_project\">\n                        <div className=\"new_project_box\">\n                            <p>Supplier</p>\n                            <select onChange={event => this.inputValue(event.target.value, 4)} value={this.state.inputs[4].value}>\n                                <option>\n                                    1\n                                </option>\n                                <option>\n                                   2\n                                </option>\n                                <option>\n                                   3\n                                </option>\n                            </select>\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[5].isTuched && !this.state.inputs[5].isValid ? this.state.inputs[5].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Materials cost</p>\n                            <Input type=\"text\" onChange={event => this.inputValue(event.target.value, 5)} value={this.state.inputs[5].value} />\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[6].isTuched && !this.state.inputs[6].isValid ? this.state.inputs[6].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Materials description</p>\n                            <Input type=\"text\" onChange={event => this.inputValue(event.target.value, 6)} value={this.state.inputs[6].value} />\n                        </div>\n\n                    </div> : \"\"}\n\n                    \n                    {this.state.expenses.map((item, index)=>{\n                         return (\n                            <Expenses key={index} element={item} />\n                         )\n                    })}\n                    <div className=\"newTask_clear\"></div>\n                    {this.state.inputs[0].value !== \"\" && this.state.inputs[2].value !== \"\" && this.state.inputs[3].value !== \"\" ? <NavLink to={`/single_project/${this.state.projectId}`}> <Save_btn  btnClick={() => this.saveTask(this.state)} /></NavLink> : \"\"}\n                    \n                   \n                   \n                    <div className=\"newTask_clear\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './singleTask.css';\nimport HeaderSecond from '../header/HeaderSecond';\nimport background from \"../../../assets/img/login_bg.png\";\nimport { Input } from 'semantic-ui-react';\nimport Save_btn from \"../save_btn/Save_btn\";\nimport { POST, GET } from '../../../core/CRUD';\nimport moment from \"moment\";\nimport Expenses from \"../expenses/Expenses\";\nimport { NavLink } from \"react-router-dom\";\nimport Load from \"../../../assets/img/Load.gif\"\n\n\nexport default class SingleTask extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            task : [],\n            error: \"\",\n            load: true,\n            newName: false,\n            newDescription : false,\n            newHourse : false,\n\n        }\n    }\n\n\n    async componentDidMount() {\n\n        let urlData = window.location.href.split(\"/\");\n        let taskId = urlData[urlData.length-1];\n\n        \n         let response = await GET(`api/tasks/${taskId}`);\n         if (!response.success) {\n            if (response.statusCode == 401) {\n                return window.location.href = '/login';\n            }\n            return this.setState({ error: response.error });\n        }  \n        this.setState({ task: response.data, load: false });    \n    }\n    editTaskName = () => {\n        this.setState({ newName: true})\n    }\n    editTaskHourse = () => {\n        this.setState({ newHourse: true})\n    }\n    editTaskDescription = () => {\n        this.setState({ newDescription: true})\n    }\n\n\n\n\n\n\n    render() {\n        let background_page = {\n            backgroundImage: `url(${background})`,\n        }\n\n        return (\n            <div className=\"Admin_page\" style={background_page}>\n                 { this.state.load ? <img src={Load}  className=\"loading\" /> : null }\n                <div className=\"admin_page_size\" style={this.state.load?{opacity:.2}:{} }>\n                    <HeaderSecond name={this.state.task.name} loc=\"/Project\" />\n                    <div className=\"new_project\">\n               \n                        <div className=\"new_project_box\">\n                            <p>Task Name </p>\n                            <div className=\"materialsCost\">\n                                {this.state.newName ? <Input type=\"text\" /> : <p>{this.state.task.name}</p>}\n                            \n                            <p onClick={this.editTaskName}> {this.state.newName ?  <i className=\"fas fa-check\" /> : <i className=\"fas fa-pencil-alt\" /> }  </p>\n                        </div>\n\n                        </div>\n                     \n                        <div className=\"new_project_box\">\n                            <p>Task Date</p>\n                            <p>{moment(this.state.task.taskDate).format('L')}</p>\n                            \n                        </div>\n                        <div className=\"new_project_box\">\n                            <p>Hours</p>\n                            <div className=\"materialsCost\">\n                            {this.state.newHourse ? <Input type=\"text\" /> : <p>{this.state.task.hours+\" \"}h</p>}\n                            <p onClick={this.editTaskHourse}> {this.state.newHourse ? <i className=\"fas fa-check\" /> : <i className=\"fas fa-pencil-alt\" />} </p>\n                        </div>\n                           \n                        </div>\n                        <div className=\"new_project_box\">\n                            <div>\n                            <p>Description</p>\n                             {this.state.newDescription ? <Input type=\"text\" /> : <p className=\"descript_info\">{this.state.task.description} </p>} \n                            </div>\n                            <div className=\"materialsCost\">\n                            \n                            <p > {this.state.newDescription ? <i className=\"fas fa-check\" onClick={()=>{this.setState({newDescription: false})}} /> : <i className=\"fas fa-pencil-alt\" onClick={this.editTaskDescription} /> } </p>\n                        </div>\n                            \n                        </div>\n\n                    </div>\n                   \n                    {this.state.task.expenses ? this.state.task.expenses.map((item, index)=>{\n                        return(\n                            <Expenses  element={item} key={index}/> \n                        )\n                    }) : \"\"}\n                    \n                    \n                 \n                    <div className=\"newTask_clear\"></div>\n                    <NavLink to={'/Project'}> <Save_btn   /></NavLink>\n                    <div className=\"newTask_clear\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Login from \"./components/Login/Login.jsx\";\nimport Page1 from \"./components/project/page1/Page1\";\nimport {Route,NavLink} from \"react-router-dom\";\nimport Admin_page from \"./components/project/admin_page/Admin_page\";\nimport Project from \"./components/project/Project\";\nimport Super_admin_page from './components/project/super_admin_page/Super_admin_page';\nimport AddNewProject from \"./components/project/add_new_project/AddNewProject\";\nimport FirstProject from \"./components/project/first_project/First_project\";\nimport NewTask from \"./components/project/new_task/NewTask\";\nimport SingleTask from \"./components/project/single_task/SingleTask\"\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path={'/'} exact={true} component={Login}  />\n      <Route path={'/login'} exact={true} component={Login}  />\n      {/* <Route path={'/page1'} exact={true} component={Page1}  /> */}\n      <Route path={'/Admin_page'} exact={true} component={Admin_page}  />\n      <Route path={'/Project'} exact={true} component={Project}  />\n      <Route path={'/NewProject'} exact={true} component={AddNewProject}  />\n      <Route path={'/single_project/:id'} exact={true} component={FirstProject} /> \n      <Route path={'/single_project/:id/New_task'} exact={true} component={NewTask} /> \n      <Route path={'/SingleTask/:id'} exact={true} component={SingleTask} /> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\n \nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\"\nconst app = (\n    <BrowserRouter>\n        <App></App>\n    </BrowserRouter>\n)\nReactDOM.render(app, document.getElementById('root'));\n\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}