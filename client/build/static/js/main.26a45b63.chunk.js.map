{"version":3,"sources":["assets/img/logo.png","assets/img/user1.png","assets/img/login_bg.png","core/configs.js","core/CRUD.js","components/Login/Login.jsx","components/project/header/Header.js","components/project/project_tests/test.js","components/project/project_tests/Projects_tests.js","components/project/page1/Page1.js","components/project/next_btn/Next_btn.js","components/project/admin_page/Admin_page.js","components/project/super_admin_page/Super_admin_page.js","components/project/Project.js","components/project/header/HeaderSecond.js","components/project/save_btn/Save_btn.js","components/project/add_new_project/AddNewProject.js","components/project/first_project/First_project.js","components/project/expenses/Expenses_info.js","components/project/expenses/Expenses.js","components/project/new_task/NewTask.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CONFIGS","DOMAIN","GET","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","statusCode","responseObj","wrap","_context","prev","next","fetch","concat","method","headers","Accept","Content-Type","Authorization","localStorage","getItem","sent","status","json","abrupt","assign","t0","Error","message","stop","_x","apply","this","arguments","POST","_ref2","_callee2","data","_context2","body","JSON","stringify","_x2","_x3","DELETE","_ref4","_callee4","_context4","_x6","_x7","Login","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeInp","value","index","inputs","state","input","isTuched","keys","validation","map","elm","isValid","test","setState","loginUser","email","password","success","setItem","id","token","window","location","href","error","loginStyle","backgroundImage","loginBg","label","type","required","massage","_this2","react_default","createElement","className","style","src","logo","Fragment","key","onChange","event","target","placeholder","onClick","React","Component","Header","userName","userInfo","userId","fullName","userImg","Test","Projects_tests","console","log","options","text","name","content","subheader","Dropdown","selection","fluid","react_router_dom","to","_id","Page1","generateProjectsItem","item","moment","created_at","format","projectId","project_tests_Projects_tests","projects","reverse","background_page","background","Header_Header","length","Next_btn","Admin_page","Super_admin_page","role","users","changeInputHandle","element","radioInputChange","createUser","deleteUser","res","generateListItem","user","currentTarget","checked","bind","Project","renderDashboard","Page1_Page1","Super_admin_page_Super_admin_page","Admin_page_Admin_page","HeaderSecond","loc","Save_btn","btnClick","curr","Date","setDate","getDate","AddNewProject","inputValue","elem","saveProject","date","description","toConsumableArray","toISOString","substr","HeaderSecond_HeaderSecond","Input","defaultValue","FirstProject","project","split","pop","ExpensesInfo","defaultclick","stopPropagation","supplier","materials_cost","materials_description","Expenses","ExpensesName","Expenses_info","expId","newTask","saveTask","taskDate","hours","expenses","materialsCost","materialsDescription","show_expensesInp","show_expenses","exp","clickCount","push","urlData","expenses_Expenses","App","react_router","path","exact","component","NewTask","Boolean","hostname","match","app","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.26a45b63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c5069d2c.png\";","module.exports = __webpack_public_path__ + \"static/media/user1.a83af490.png\";","module.exports = __webpack_public_path__ + \"static/media/login_bg.5f59f833.png\";","const HOST = 'localhost';\nconst PORT = 3000;\n\nconst CONFIGS = {\n  // DOMAIN: `http://${HOST}:${PORT}`\n  DOMAIN: 'https://invoiceeapp.herokuapp.com'\n};\n\nexport default CONFIGS;\n","import CONFIGS from './configs';\n\nexport const GET = async url => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem('userToken')}`\n      }\n    });\n    let statusCode = response.status;\n    let responseObj = await response.json();\n    \n    return Object.assign(responseObj, { statusCode });\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const POST = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem('userToken')}`\n      }\n    });\n    let statusCode = response.status;\n    let responseObj = await response.json();\n\n    return Object.assign(responseObj, { statusCode });\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const PUT = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem('userToken')}`\n      }\n    });\n    let statusCode = response.status;\n    let responseObj = await response.json();\n\n    return Object.assign(responseObj, { statusCode });\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const DELETE = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'DELETE',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem('userToken')}`\n      }\n    });\n    let statusCode = response.status;\n    let responseObj = await response.json();\n\n    return Object.assign(responseObj, { statusCode });\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n","import React from 'react';\r\nimport './login.css';\r\nimport logo from \"../../assets/img/logo.png\";\r\nimport loginBg from \"../../assets/img/login_bg.png\";\r\nimport {Route, NavLink} from \"react-router-dom\";\r\nimport { POST } from '../../core/CRUD';\r\n\r\nexport default class Login extends React.Component {\r\n      constructor(props){\r\n          super(props);\r\n          this.state = {\r\n            inputs:[\r\n                {\r\n                    label: \"Email\",\r\n                    type: \"email\",\r\n                    isTuched: false,\r\n                    isValid: false,\r\n                    value: \"\",\r\n                    validation: {\r\n                        required: true,\r\n                        email: true\r\n                    },\r\n                    massage:'Please enter valid email!'\r\n                },\r\n                {\r\n                    label: \"Password\",\r\n                    type: \"password\",\r\n                    isTuched: false,\r\n                    isValid: false,\r\n                        value: \"\",\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    massage:'Please enter valid password!'\r\n                }\r\n            ],\r\n            error: \"\"\r\n          }\r\n      }\r\n\r\n      \r\n    onChangeInp = (value,index) => {\r\n        const inputs = this.state.inputs\r\n        const input = inputs[index];\r\n        input.value = value;\r\n        input.isTuched = true;\r\n        Object.keys(input.validation).map((elm)=>{\r\n            if(elm == \"required\"){\r\n                if(value == \"\" || value == null){\r\n                    input.isValid = false;\r\n                }\r\n                else{\r\n                    input.isValid = true\r\n                }\r\n\r\n            }else if (elm == \"email\"){\r\n                let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                if(re.test(value)){\r\n                    input.isValid = true;\r\n                }\r\n                else{\r\n                    input.isValid = false\r\n                }\r\n            }\r\n        })\r\n        this.setState({\r\n            inputs\r\n        })\r\n    }\r\n\r\n    loginUser = async data => {\r\n      let email = data[0].value;\r\n      let password = data[1].value;\r\n\r\n      if(email && password){\r\n        try {\r\n          let response = await POST('api/auth/login', { email, password });\r\n          if(response.success){\r\n            localStorage.setItem('userId', response.data.id);\r\n            localStorage.setItem('userToken', response.data.token);\r\n            window.location.href = '/Project';\r\n          } else {\r\n            this.setState({error: response.error});\r\n          }\r\n        } catch (error) {\r\n          this.setState({\r\n            error: error.message\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          error: 'Username or password is empty!'\r\n        });\r\n      }\r\n    }\r\n\r\n     loginStyle = {\r\n        backgroundImage: `url(${loginBg})`,\r\n      }\r\n    render(){\r\n    \r\n        return(\r\n            <div className=\"Login\" style={this.loginStyle}>\r\n                <div className=\"login_size\">\r\n                <div className=\"login_top\">\r\n                    <img src={logo} />\r\n                </div>\r\n                <div className=\"login_inputs\">\r\n                  {this.state.inputs.map((elm, index)=>{\r\n                      return(\r\n                          <>\r\n                          <p className=\"error_message\">{elm.isTuched && !elm.isValid?elm.massage:''}</p>\r\n                          <input key={index} type={elm.type} value={elm.value} onChange={event=>this.onChangeInp(event.target.value,index)} placeholder={elm.label} />\r\n                          </>\r\n                      )\r\n                  })}\r\n                <button onClick={() => this.loginUser(this.state.inputs)}>Login</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './header.css';\r\nimport userImg from \"../../../assets/img/user1.png\";\r\nimport { GET } from '../../../core/CRUD';\r\n\r\n\r\nexport default class Header extends React.Component {\r\n      constructor(props){\r\n          super(props);\r\n          this.state = {\r\n              userName: \"\",\r\n              userInfo: \"\"\r\n          }\r\n      }\r\n      async componentDidMount(){\r\n        let userId = localStorage.getItem('userId');\r\n        let response = await GET(`api/users/${userId}`);\r\n        this.setState({\r\n            userName: response.data.fullName\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"Header\">\r\n                    <div className=\"header_size\">\r\n                        <div className=\"header_size_left\">\r\n                            <img src={userImg} />\r\n                        </div>\r\n                        <div className=\"header_size_right\">\r\n                            <p className=\"Employer_Name\">{this.state.userName}</p>\r\n                            <p className=\"Employer_info\">{this.state.userInfo}</p>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport \"./project_tests.css\";\r\n\r\n\r\n\r\nclass Test extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <p className=\"text_tittle\">no task</p>\r\n                <div className=\"test_flex\">\r\n                <p>text text</p>\r\n                <p>add task</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Test","import React from 'react';\r\nimport { Dropdown, Header } from 'semantic-ui-react';\r\nimport \"./project_tests.css\";\r\nimport Test from \"./test.js\";\r\nimport {NavLink} from \"react-router-dom\";\r\n \r\n\r\n\r\n\r\n\r\nclass Projects_tests extends React.Component  {\r\n      constructor(props){\r\n        super(props);\r\n      }\r\n      render(){\r\n        console.log(this.state);\r\n        \r\n        const options = [\r\n          {\r\n            key: 1,\r\n            text: this.props.data.name,\r\n            value: 1,\r\n            content: <Test  content='task empty' subheader='12.11' />,\r\n          },\r\n        ]\r\n        return(\r\n          <div className=\"ProjectTests\">\r\n          <Dropdown selection fluid options={options} placeholder={this.props.data.name} />\r\n          <NavLink to={`/single_project/${this.props.data._id}`}><p><i className=\"fas fa-arrow-circle-right\" /></p></NavLink>\r\n       </div>\r\n        )\r\n      }\r\n}\r\n\r\n\r\n\r\nexport default Projects_tests","import React from 'react';\r\nimport './page1.css';\r\nimport Header from '../header/Header';\r\nimport background from \"../../../assets/img/login_bg.png\";\r\nimport Projects_tests from \"../project_tests/Projects_tests\";\r\nimport { POST, GET } from '../../../core/CRUD';\r\nimport moment from \"moment\";\r\n\r\n\r\nexport default class Page1 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projects: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let userId = localStorage.getItem('userId');\r\n        \r\n        \r\n        if (!userId) {\r\n            return window.location.href = '/login';\r\n        }\r\n        let response = await GET(`api/users/${userId}`);\r\n        console.log(response);\r\n        if (!response.success) {\r\n            if (response.statusCode == 401) {\r\n                return window.location.href = '/login';\r\n            }\r\n            return this.setState({ error: response.error });\r\n        }\r\n        this.setState({ projects: response.data.projects.reverse() });\r\n    }\r\n    generateProjectsItem = data => {\r\n        return data.map((item, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <div className=\"project_info\">\r\n                        <p>{moment(item.created_at).format('L')}</p>\r\n                        <p>{item.projectId}</p>\r\n\r\n                    </div>\r\n                    <Projects_tests data={item} />\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.projects);\r\n        \r\n        let background_page = {\r\n            backgroundImage: `url(${background})`,\r\n        }\r\n        return (\r\n            <div className=\"Page1\" style={background_page}>\r\n                <div className=\"page1_size\">\r\n                    <Header />\r\n                    {this.state.projects.length > 0 ? this.generateProjectsItem(this.state.projects) : \"\"}\r\n                    <div className=\"page1_clear_top\"></div>\r\n                    <div className=\"next_btn_div\">\r\n                    <button className=\"next_btn\">next <i className=\"fas fa-arrow-right\" /> </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './next_btn.css';\n\nexport default function Next_btn(props){\n        return(\n            <div className=\"next_btn_div\">\n            <button className=\"next_btn\">next <i className=\"fas fa-arrow-right\" /> </button>\n            </div>\n        )\n}","import React from 'react';\nimport './admin_page.css';\nimport Header from '../header/Header.js';\nimport background from \"../../../assets/img/login_bg.png\";\nimport Projects_tests from \"../project_tests/Projects_tests\";\nimport Next_btn from \"../next_btn/Next_btn\";\nimport { NavLink } from \"react-router-dom\";\nimport { POST, GET } from '../../../core/CRUD';\nimport moment from \"moment\";\n\n\nexport default class Admin_page extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            projects: []\n        }\n    }\n    async componentDidMount() {\n        let userId = localStorage.getItem('userId');\n        if (!userId) {\n            return window.location.href = '/login';\n        }\n        let response = await GET(`api/users/${userId}`);\n        if (!response.success) {\n            if (response.statusCode == 401) {\n                return window.location.href = '/login';\n            }\n            return this.setState({ error: response.error });\n        }\n        this.setState({ projects: response.data.projects.reverse() });\n    }\n    generateProjectsItem = data => {\n        return data.map((item, index) => {\n            return (\n                <div key={index}>\n                    <div className=\"project_info\">\n                        <p>{moment(item.created_at).format('L')}</p>\n                        <p>{item.projectId}</p>\n\n                    </div>\n                    <Projects_tests data={item} />\n                </div>\n            )\n        })\n    }\n    render() {\n        let background_page = {\n            backgroundImage: `url(${background})`,\n        }\n        return (\n            <div className=\"Admin_page\" style={background_page}>\n                <div className=\"admin_page_size\">\n                    <Header />\n                    <div className=\"add_new_project_btn\">\n\n                        <NavLink to={\"/NewProject\"}> <button><i className=\"fas fa-plus\" /> Add new project</button> </NavLink>\n                    </div>\n                    <div className=\"admin_page_inputs\">\n                        <div className=\"admin_page_inputs_filtr\">\n                            <input type=\"checkbox\" />\n                            <p>DD/MM/YY</p>\n                        </div>\n                        <div className=\"admin_page_inputs_filtr admin_page_inputs_filtr_2\">\n                            <input type=\"checkbox\" />\n                            <p>Project ID</p>\n                        </div>\n                    </div>\n                    <div className=\"admin_page_search\">\n                        <input type=\"text\" />\n                        <button><i className=\"fas fa-search\" /></button>\n                    </div>\n\n                    {this.state.projects.length > 0 ? this.generateProjectsItem(this.state.projects) : \"\"}\n\n                    <div className=\"admin_p_clear_top\">\n                        <NavLink to={\"/page1\"}><Next_btn /></NavLink>\n                    </div>\n\n\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './super_admin_page.css';\nimport Header from '../header/Header';\nimport background from \"../../../assets/img/login_bg.png\";\nimport { POST, GET, DELETE } from \"../../../core/CRUD\"\nimport { async } from 'q';\n\nexport default class Super_admin_page extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        inputs: {\n            email: {\n                value: '',\n                isTuched: false,\n                isValid: false,\n                massage: 'Please enter valid email!',\n            },\n            name: {\n                value: '',\n                isTuched: false,\n                isValid: false,\n                massage: 'Please enter name',\n            },\n            role: {\n                value: \"employer\"\n            },\n        },\n        users: [],\n        error: \"\"\n    }\n\n   async componentDidMount (){\n        let res = await  GET('api/admin/usersList');\n        if(!res.success){\n           return this.setState({error: res.error}); \n        } \n        this.setState({users: res.data});   \n    }\n\n    changeInputHandle = (element, value) => {\n        if (element === 'email') {\n            let email = this.state.inputs.email;\n            email.value = value;\n            let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            if (re.test(value)) {\n                email.isTuched = true;\n                email.isValid = true\n            } else {\n                email.isTuched = true;\n                email.isValid = false\n            }\n            this.setState({ email })\n\n        } else if (element === 'name') {\n            let name = this.state.inputs.name;\n            name.value = value;\n            if (value === '' || value === null) {\n                name.isTuched = true;\n                name.isValid = false\n            } else {\n                name.isTuched = true;\n                name.isValid = true\n            }\n            this.setState({ name })\n\n        }\n    }\n\n    radioInputChange = name => {\n        let role = this.state.inputs.role;\n        role.value = name;\n        this.setState({ role })\n    }\n    createUser = async(data) => {\n        let { email, name, role } = data;\n        if (!email.value || !name.value || !role.value) {\n            return this.setState({ error: 'All fields are required!' });\n        }\n\n        let response = await POST('api/admin/create_user', {\n            email: email.value,\n            role: role.value,\n            fullName: name.value\n        });\n        if(!response.success){\n            return this.setState({error: response.error});\n        }\n        email.value = '';\n        name.value = '';\n        this.setState({users: response.data, error: '',inputs:data });\n    }\n\n    deleteUser = async (userId) => {\n        let res = await DELETE('api/admin/delete_user', { userId });\n        if(!res.success){\n            return this.setState({error: res.error});\n        }\n        this.setState({\n            users: res.data,\n            error: ''\n        });\n    }\n\n    generateListItem = data => {\n        return data.map((user, index) => {\n            return(\n                <tr key = { index } className=\"user_list\">\n                  <td>{index + 1}</td>  <td> { user.email }</td> <td> {user.fullName} </td> <td>{ user.role }</td> <td> <button onClick={() => this.deleteUser(user._id)}\n                    >delete</button> </td>\n                </tr>\n            )\n        })\n    }\n\n    render() {\n        let background_page = {\n            backgroundImage: `url(${background})`,\n        }\n        return (\n            <div className=\"Admin_page\" style={background_page}>\n                <div className=\"admin_page_size\">\n                    <Header />\n                    {this.state.error? <div>{this.state.error}</div> : null}\n                    <div className=\"sup_admin_clear\"></div>\n                    <div className=\"sup_admin_page_search\">\n                        <p>{this.state.inputs.email.isTuched && !this.state.inputs.email.isValid ? this.state.inputs.email.massage : ''}</p>\n                        <input type=\"text\" placeholder=\"Email\" value={this.state.inputs.email.value} onChange={event => this.changeInputHandle('email', event.currentTarget.value)} />\n                        <p> {this.state.inputs.name.isTuched && !this.state.inputs.name.isValid ? this.state.inputs.name.massage : ''} </p>\n                        <input type=\"text\" placeholder=\"Full name\" value={this.state.inputs.name.value} onChange={event => this.changeInputHandle('name', event.currentTarget.value)} />\n                    </div>\n                    <div className=\"admin_page_inputs\">\n                        <div className=\"admin_page_inputs_filtr\">\n                            <input type=\"radio\" name=\"user\" checked value = 'employer' onChange = { this.radioInputChange.bind(this, 'employer') }/>\n                            <p>Employee</p>\n                        </div>\n                        <div className=\"admin_page_inputs_filtr admin_page_inputs_filtr_2\">\n                            <input type=\"radio\" name=\"user\" value = 'admin' onChange = { this.radioInputChange.bind(this, 'admin') } />\n                            <p>Admin</p>\n                        </div>\n                    </div>\n                    <div className=\"add_new_project_btn\">\n                        <button onClick={async () => this.createUser(this.state.inputs)} >Create</button>\n                    </div>\n                    <div  className=\"user_table_content\">\n                    <table className=\"users_list\">\n                        <thead>\n                            <tr>\n                                <th>N</th>\n                                <th>Email</th>\n                                <th>Fullname</th>\n                                <th>Role</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.users.length > 0 ? this.generateListItem(this.state.users) : \"\" }\n                        </tbody>\n                    </table>\n                    </div>\n                    <div className=\"sup_admin_clear\"></div>\n                </div>\n            </div>\n        )\n    }\n    \n}","import React from 'react';\nimport Page1 from \"./page1/Page1\";\nimport Admin_page from \"./admin_page/Admin_page\";\nimport Super_admin_page from \"./super_admin_page/Super_admin_page\";\nimport { GET } from '../../core/CRUD';\nimport { log } from 'util';\n\n\n\n\n\nexport default class Project extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            error: '',\n            user: ''\n        };\n    }\n\n\n    async componentDidMount(){\n        let userId = localStorage.getItem('userId');\n        if(!userId){\n            return window.location.href = '/login';\n        }\n        let response = await GET(`api/users/${userId}`);\n        if(!response.success){\n            if(response.statusCode == 401){\n                return window.location.href = '/login';\n            }\n            return this.setState({error: response.error});\n        }\n        this.setState({user: response.data});\n    }\n\n    renderDashboard = user => {\n        if(user.role && user.role === 'employer'){\n          return (<Page1 user={user}/>);\n        }\n        if(user.role && user.role === 'superadmin'){\n          return (<Super_admin_page user={user}/>);\n        }\n        if(user.role && user.role === 'admin'){\n          return (<Admin_page user={user}/>);\n        }\n      }\n\n    render(){\n        return(\n            <div className=\"project\">\n                { this.state.user ? this.renderDashboard(this.state.user) : null }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './header.css';\nimport {NavLink} from \"react-router-dom\";\n\nexport default class HeaderSecond extends React.Component {\n      constructor(props){\n          super(props);\n          this.state = {\n              userName: \"\",\n              userInfo: \"\"\n          }\n      }\n\n    render(){\n        return(\n            <div className=\"HeaderSecond\">\n                    <div className=\"sec_header_size\">\n                        <div className=\"sec_header_size_left\">\n                            <p className=\"head_arrow_left\">\n                                <NavLink to={this.props.loc}><i className=\"fas fa-arrow-left\" /></NavLink>\n                                </p>\n                        </div>\n                        <div className=\"sec_header_size_right\">\n                            <p className=\"sec_head_tittle\">{this.props.name}</p>\n                        </div>\n                    </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './save_btn.css';\n\nexport default  props => {\n        return(\n            <div className=\"next_btn_div\">\n            <button onClick={props.btnClick} className=\"next_btn\">Save </button>\n            </div>\n        )\n}","import React from 'react';\nimport './AddNewProject.css';\nimport HeaderSecond from '../header/HeaderSecond';\nimport background from \"../../../assets/img/login_bg.png\";\nimport Projects_tests from \"../project_tests/Projects_tests\";\nimport { NavLink } from \"react-router-dom\";\nimport { Input } from 'semantic-ui-react';\nimport Next_btn from \"../next_btn/Next_btn\";\nimport Save_btn from \"../save_btn/Save_btn\";\nimport { POST, GET } from '../../../core/CRUD';\nimport moment from \"moment\";\n\nvar curr = new Date();\ncurr.setDate(curr.getDate());\nexport default class AddNewProject extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputs: [\n                {\n                    label: \"Project Name\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter name'\n                },\n                {\n                    label: \"Project Date\",\n                    isTuched: false,\n                    isValid: false,\n                    value: curr.toISOString().substr(0, 10),\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter date'\n                },\n                {\n                    label: \"description\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter description'\n                }\n            ],\n            error: \"\",\n            projects: []\n        }\n    }\n\n    async componentDidMount() {\n        let userId = localStorage.getItem('userId');\n        if (!userId) {\n            return window.location.href = '/login';\n        }\n        let response = await GET(`api/users/${userId}`);\n        if (!response.success) {\n            if (response.statusCode == 401) {\n                return window.location.href = '/login';\n            }\n            return this.setState({ error: response.error });\n        }\n        this.setState({ projects: response.data.projects.reverse() });\n    }\n\n\n    inputValue = (value, index) => {\n        let inputs = this.state.inputs;\n        let input = inputs[index];\n        Object.keys(input.validation).map((elem) => {\n            if (elem == \"required\") {\n                if (value == \"\" || value == null) {\n                    input.isValid = false;\n                }\n                else {\n                    input.isValid = true\n                }\n\n            }\n        });\n        input.isTuched = true;\n        input.value = value;\n        this.setState({ inputs })\n\n    }\n    saveProject = async () => {\n        let inputs = [...this.state.inputs];\n        let name = inputs[0].value;\n        let date = inputs[1].value;\n        let description = inputs[2].value;\n\n        if (name === '' || date === '' || description === '') {\n            return this.setState({ error: 'All fields are required!' });\n        }\n\n        let response = await POST('api/users/createProject', {\n            name: name,\n            date: date,\n            description: description\n        });\n\n        console.log(response.data.projects);\n\n        if (!response.success) {\n            return this.setState({ error: response.error });\n        }\n        name = '';\n        description = '';\n        this.setState({ projects: response.data.projects.reverse(), error: '', inputs });\n        console.log(this.state.projects);\n    }\n\n    generateProjectsItem = data => {\n        return data.map((item, index) => {\n            return (\n                <div key={index}>\n                    <div className=\"project_info\">\n                        <p>{moment(item.created_at).format('L')}</p>\n                        <p>{item.projectId}</p>\n                        \n                    </div>\n                    <Projects_tests data={item}  />\n                </div>\n            )\n        })\n    }\n    render() {\n        let background_page = {\n            backgroundImage: `url(${background})`,\n        }\n\n        return (\n            <div className=\"Admin_page\" style={background_page}>\n                <div className=\"admin_page_size\">\n                    <HeaderSecond name=\"New Project\" loc=\"/Admin_page\" />\n                    <div className=\"new_project\">\n                        <div className=\"new_project_box\">\n                            <p>Project Name</p>\n                            <Input type=\"text\" onChange={event => this.inputValue(event.target.value, 0)} value={this.state.inputs[0].value} />\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[0].isTuched && !this.state.inputs[0].isValid ? this.state.inputs[0].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Project Date</p>\n                            <Input type=\"date\" defaultValue={this.state.inputs[1].value} onChange={event => this.inputValue(event.target.value, 1)} />\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[1].isTuched && !this.state.inputs[1].isValid ? this.state.inputs[1].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Description</p>\n                            <Input type=\"text\" className=\"discrip_inp\" onChange={event => this.inputValue(event.target.value, 2)} value={this.state.inputs[2].value} />\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[2].isTuched && !this.state.inputs[2].isValid ? this.state.inputs[2].massage : ''}</p>\n                    </div>\n                    <div className=\"addNewPrClear_top\" >\n                        <Save_btn btnClick={this.saveProject} />\n                    </div>\n                    {this.state.projects.length > 0 ? this.generateProjectsItem(this.state.projects) : \"\"}\n\n                    <div className=\"addNewPrClear_bottom\">\n                        <NavLink to={\"/page1\"}><Next_btn /></NavLink>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './firstProject.css';\nimport HeaderSecond from '../header/HeaderSecond';\nimport background from \"../../../assets/img/login_bg.png\";\nimport { NavLink } from \"react-router-dom\";\nimport { POST, GET } from '../../../core/CRUD';\nimport queryString from 'query-string';\n\n\n\nexport default class FirstProject extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n                    project: {},\n                    error: \"\",\n        }\n    }\n\n    async componentDidMount() {\n        let projectId = window.location.href.split(\"/\").pop();\n         let response = await GET(`api/projects/${projectId}`);\n         if (!response.success) {\n            if (response.statusCode == 401) {\n                return window.location.href = '/login';\n            }\n            return this.setState({ error: response.error });\n        }\n        console.log(response.data);\n        this.setState({ project: response.data });\n         \n        \n    }\n\n    render() {\n        \n        let background_page = {\n            backgroundImage: `url(${background})`,\n        }\n        return (\n            <div className=\"Admin_page\" style={background_page}>\n                <div className=\"admin_page_size\">\n                    <HeaderSecond name={this.state.project.name} loc=\"/Admin_page\" />\n                    <div className=\"add_new_project_btn\">\n\n                        <NavLink to={`/single_project/${this.state.project._id}/New_task`}> <button><i className=\"fas fa-plus\" /> Add new task</button> </NavLink>\n                    </div>\n                    <div className=\"admin_page_search\">\n                        <input type=\"text\" />\n                        <button><i className=\"fas fa-search\" /></button>\n                    </div>\n                    <div className=\"firstProject_clear\"></div>\n                        <div className=\"taskInformation\">\n                            <p>task1</p>\n                            <p>task1</p>\n                        </div>\n                        <div className=\"taskInformation\">\n                            <p>task1</p>\n                            <p>task1</p>\n                        </div>\n                        <div className=\"taskInformation\">\n                            <p>task1</p>\n                            <p>task1</p>\n                        </div>\n\n\n\n\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./expenses.css\";\n\n\n\n\nclass ExpensesInfo extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    defaultclick = event => {\n        // event.preventDefault();\n        event.stopPropagation();\n    }\n\n    render() {\n        return (\n            <div className=\"ExpensesInfo\">\n                <div className=\"new_project\" onClick={event => this.defaultclick(event)}>\n                    <div className=\"new_project_box\">\n                        <p>Supplier</p>\n                        <select >\n                            <option>\n                            {typeof this.props.element !== 'undefined' ? this.props.element.supplier : ''}\n                                </option>\n                            <option>\n                                Haymans\n                                </option>\n                            <option>\n                                Haymans\n                                </option>\n                        </select>\n                    </div>\n                    {console.log(this.props)\n                    }\n                    <div className=\"new_project_box\">\n                        <p>Materials cost</p>\n                        <div className=\"materialsCost\">\n                            <p>{typeof this.props.element !== 'undefined' ? this.props.element.materials_cost : ''}</p>\n                            <p><i className=\"fas fa-pencil-alt\" /></p>\n                        </div>\n                    </div>\n\n                    <div className=\"new_project_box\">\n                        <p>Materials description</p>\n                        <div className=\"materialsCost\">\n                            <p>{typeof this.props.element !== 'undefined' ? this.props.element.materials_description : ''}</p>\n                            <p ><i className=\"fas fa-pencil-alt\" /></p>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nexport default ExpensesInfo","import React from 'react';\nimport { Dropdown, Header } from 'semantic-ui-react';\nimport \"./expenses.css\";\nimport {NavLink} from \"react-router-dom\";\nimport ExpensesInfo from \"./Expenses_info\"\n \n\n\n\n\nclass Expenses extends React.Component  {\n      constructor(props){\n        super(props);\n        this.state = {\n          ExpensesName: \"Expenses\",\n          \n        }\n      }\n      render(){ \n        console.log(this.props);\n        \n        const options = [\n          {\n            key: 1,\n            text: this.props.name,\n            value: 1,\n            content: <ExpensesInfo element={this.props.element} />,\n          },\n        ]\n        return(\n          <div className=\"Expenses\">\n          <Dropdown selection fluid options={options} placeholder={this.props.element.expId>0 ? this.state.ExpensesName + \" (\" + this.props.element.expId  + \")\"  : this.state.ExpensesName  } />\n       </div>\n        )\n      }\n      \n}\n\n\n\nexport default Expenses","import React from 'react';\nimport './newTask.css';\nimport HeaderSecond from '../header/HeaderSecond';\nimport background from \"../../../assets/img/login_bg.png\";\nimport { Input } from 'semantic-ui-react';\nimport Save_btn from \"../save_btn/Save_btn\";\nimport { POST, GET } from '../../../core/CRUD';\nimport Expenses from \"../expenses/Expenses\"\n\nvar curr = new Date();\ncurr.setDate(curr.getDate());\n\nexport default class newTask extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            project : [],\n            inputs: [\n                {\n                    label: \"Task Date\",\n                    isTuched: false,\n                    isValid: false,\n                    value: curr.toISOString().substr(0, 10),\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter date'\n                },\n                {\n                    label: \"Hours\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter hours'\n                },\n                {\n                    label: \"description\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter description'\n                },\n                {\n                    label: \"Supplier\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: ''\n                },\n                {\n                    label: \"Materials cost\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter Materials cost'\n                },\n                {\n                    label: \"materials description\",\n                    isTuched: false,\n                    isValid: false,\n                    value: \"\",\n                    validation: {\n                        required: true,\n                        email: true\n                    },\n                    massage: 'Please enter materials description'\n                },\n            ],\n            error: \"\",\n            expenses: [],\n            show_expenses: false,\n            clickCount : 1\n        }\n    }\n\n\n    async componentDidMount() {\n        let urlData = window.location.href.split(\"/\");\n        let projectId = urlData[urlData.length-2];\n        \n         let response = await GET(`api/projects/${projectId}`);\n         if (!response.success) {\n            if (response.statusCode == 401) {\n                return window.location.href = '/login';\n            }\n            return this.setState({ error: response.error });\n        }\n        \n        this.setState({ project: response.data });\n         \n        \n    }\n\n    saveTask = async () => {\n        let inputs = [...this.state.inputs];\n        let taskDate = inputs[0].value;\n        let hours = inputs[1].value;\n        let description = inputs[2].value;\n        \n        let expenses = this.state.expenses.map(item => {\n            \n            return {\n                supplier: item.supplier,\n                materialsCost: item.materials_cost,\n                materialsDescription: item.materials_description\n            };\n        });\n\n        if (taskDate === '' || hours === '' || description === '' ) {\n            return this.setState({ error: 'All fields are required!' });\n        }\n\n        let response = await POST('api/tasks', {\n            taskDate: taskDate,\n            hours: hours,\n            description: description,\n            expenses: expenses,\n            projectId: this.state.project._id\n        });\n        console.log(response, \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\n        \n    }\n    inputValue = (value, index) => {\n        let inputs = this.state.inputs;\n        let input = inputs[index];\n        Object.keys(input.validation).map((elem) => {\n            if (elem == \"required\") {\n                if (value == \"\" || value == null) {\n                    input.isValid = false;\n                }\n                else {\n                    input.isValid = true\n                }\n\n            }\n        });\n        input.isTuched = true;\n        input.value = value;\n        this.setState({ inputs })\n\n    }\n    show_expensesInp = () =>{\n        this.setState({\n            show_expenses: true,\n        })\n        if(this.state.inputs[4].isValid && this.state.inputs[5].isValid){ \n            let expenses = [...this.state.expenses]\n            let exp =  {\n                supplier: this.state.inputs[3].value,\n                materials_cost: this.state.inputs[4].value,\n                materials_description: this.state.inputs[5].value,\n                expId: this.state.clickCount\n             }\n            expenses.push(exp);\n            let inputs =  this.state.inputs;\n            inputs[4].value = '';\n            inputs[5].value = '';\n          return  this.setState({\n                clickCount:this.state.clickCount+1,\n                 expenses,  \n                 inputs\n            })\n        }\n    }\n\n    render() {\n        let background_page = {\n            backgroundImage: `url(${background})`,\n        }\n\n        return (\n            <div className=\"Admin_page\" style={background_page}>\n                <div className=\"admin_page_size\">\n                    <HeaderSecond name=\"New Task\" loc=\"/Admin_page\" />\n                    <div className=\"new_project\">\n                        <p className=\"error_message\">{this.state.inputs[0].isTuched && !this.state.inputs[0].isValid ? this.state.inputs[0].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Task Date</p>\n                            <Input type=\"date\" defaultValue={this.state.inputs[0].value} onChange={event => this.inputValue(event.target.value, 0)} />\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[1].isTuched && !this.state.inputs[1].isValid ? this.state.inputs[1].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Hours</p>\n                            <Input type=\"number\" onChange={event => this.inputValue(event.target.value, 1)} value={this.state.inputs[1].value} />\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[2].isTuched && !this.state.inputs[2].isValid ? this.state.inputs[2].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Description</p>\n                            <Input type=\"text\" className=\"discrip_inp\" onChange={event => this.inputValue(event.target.value, 2)} value={this.state.inputs[2].value} />\n                        </div>\n\n                        <div className=\"create_expenses_box\" >\n                            <div className=\"create_expenses\" onClick={this.show_expensesInp}>\n                                <p> <i className=\"fas fa-plus\" /></p>\n                                <p className=\"create_expenses_tittle\">Expenses</p>\n                            </div>\n                        </div>\n\n                    </div>\n                   \n                    {this.state.show_expenses ?  <div className=\"new_project\">\n                        <div className=\"new_project_box\">\n                            <p>Supplier</p>\n                            <select onChange={event => this.inputValue(event.target.value, 3)} value={this.state.inputs[3].value}>\n                                <option>\n                                    Haymans\n                                </option>\n                                <option>\n                                    Hsdfdfdfdf\n                                </option>\n                            </select>\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[4].isTuched && !this.state.inputs[4].isValid ? this.state.inputs[4].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Materials cost</p>\n                            <Input type=\"text\" onChange={event => this.inputValue(event.target.value, 4)} value={this.state.inputs[4].value} />\n                        </div>\n                        <p className=\"error_message\">{this.state.inputs[5].isTuched && !this.state.inputs[5].isValid ? this.state.inputs[5].massage : ''}</p>\n                        <div className=\"new_project_box\">\n                            <p>Materials description</p>\n                            <Input type=\"text\" onChange={event => this.inputValue(event.target.value, 5)} value={this.state.inputs[5].value} />\n                        </div>\n\n                    </div> : \"\"}\n\n                    \n                    {this.state.expenses.map((item, index)=>{\n                         return (\n                            <Expenses key={index} element={item} />\n                         )\n                    })}\n                    <div className=\"newTask_clear\"></div>\n                    <Save_btn  btnClick={this.saveTask} />\n                    <div className=\"newTask_clear\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport Login from \"./components/Login/Login.jsx\";\nimport Page1 from \"./components/project/page1/Page1\";\nimport {Route,NavLink} from \"react-router-dom\";\nimport Admin_page from \"./components/project/admin_page/Admin_page\";\nimport Project from \"./components/project/Project\";\nimport Super_admin_page from './components/project/super_admin_page/Super_admin_page';\nimport AddNewProject from \"./components/project/add_new_project/AddNewProject\";\nimport FirstProject from \"./components/project/first_project/First_project\";\nimport NewTask from \"./components/project/new_task/NewTask\"\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path={'/'} exact={true} component={Login}  />\n      <Route path={'/login'} exact={true} component={Login}  />\n      {/* <Route path={'/page1'} exact={true} component={Page1}  /> */}\n      <Route path={'/Admin_page'} exact={true} component={Admin_page}  />\n      <Route path={'/Project'} exact={true} component={Project}  />\n      <Route path={'/NewProject'} exact={true} component={AddNewProject}  />\n      <Route path={'/single_project/:id'} exact={true} component={FirstProject} /> \n      <Route path={'/single_project/:id/New_task'} exact={true} component={NewTask} /> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\n \nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\"\nconst app = (\n    <BrowserRouter>\n        <App></App>\n    </BrowserRouter>\n)\nReactDOM.render(app, document.getElementById('root'));\n\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}