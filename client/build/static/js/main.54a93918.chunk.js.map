{"version":3,"sources":["assets/img/logo.png","assets/img/user1.png","core/configs.js","core/CRUD.js","components/Login/Login.jsx","components/project/header/Header.js","components/project/project_tests/test.js","components/project/project_tests/Projects_tests.js","components/project/page1/Page1.js","App.js","serviceWorker.js","index.js","assets/img/login_bg.png"],"names":["module","exports","__webpack_require__","p","CONFIGS","DOMAIN","POST","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","url","data","response","responseObj","wrap","_context2","prev","next","fetch","concat","method","body","JSON","stringify","headers","Accept","Content-Type","sent","json","abrupt","t0","Error","message","stop","_x2","_x3","apply","this","arguments","Login","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeInp","value","index","inputs","state","input","isTuched","keys","validation","map","elm","isValid","test","setState","loginUser","_ref","_callee","email","password","_context","success","localStorage","setItem","id","token","window","location","href","error","_x","loginStyle","backgroundImage","loginBg","label","type","required","massage","_this2","react_default","createElement","className","style","src","logo","Fragment","key","onChange","event","target","placeholder","onClick","React","Component","Header","userImg","Test","options","text","content","subheader","Projects_tests","Dropdown","selection","fluid","Page1","background_page","background","Header_Header","project_tests_Projects_tests","App","react_router","path","exact","component","Boolean","hostname","match","app","react_router_dom","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54a93918.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c5069d2c.png\";","module.exports = __webpack_public_path__ + \"static/media/user1.a83af490.png\";","const HOST = 'localhost';\nconst PORT = 3000;\n\nconst CONFIGS = {\n  // DOMAIN: `http://${HOST}:${PORT}`\n  DOMAIN: 'https://invoiceeapp.herokuapp.com'\n};\n\nexport default CONFIGS;\n","import CONFIGS from './configs';\n\nexport const GET = async url => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        \"Authorization\": `Bearer ${localStorage.getItem('userToken')}`\n      }\n    });\n    let responseObj = response.json();\n\n    return responseObj;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const POST = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    let responseObj = response.json();\n\n    return responseObj;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const PUT = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'PUT',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    let responseObj = response.json();\n\n    return responseObj;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n\nexport const DELETE = async (url, data) => {\n  try {\n    let response = await fetch(`${CONFIGS.DOMAIN}/${url}`, {\n      method: 'DELETE',\n      body: JSON.stringify(data),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    let responseObj = response.json();\n\n    return responseObj;\n  } catch (error) {\n    throw new Error(error.message);\n  }\n}\n","import React from 'react';\r\nimport './login.css';\r\nimport logo from \"../../assets/img/logo.png\";\r\nimport loginBg from \"../../assets/img/login_bg.png\";\r\nimport {Route, NavLink} from \"react-router-dom\";\r\n\r\nimport { POST } from '../../core/CRUD';\r\n\r\n\r\nexport default class Login extends React.Component {\r\n      constructor(props){\r\n          super(props);\r\n          this.state = {\r\n            inputs:[\r\n                {\r\n                    label: \"Email\",\r\n                    type: \"email\",\r\n                    isTuched: false,\r\n                    isValid: false,\r\n                    value: \"\",\r\n                    validation: {\r\n                        required: true,\r\n                        email: true\r\n                    },\r\n                    massage:'Please enter valid email!'\r\n                },\r\n                {\r\n                    label: \"Password\",\r\n                    type: \"password\",\r\n                    isTuched: false,\r\n                    isValid: false,\r\n                        value: \"\",\r\n                    validation: {\r\n                        required: true\r\n                    },\r\n                    massage:'Please enter valid password!'\r\n                }\r\n            ],\r\n            error: \"\"\r\n          }\r\n      }\r\n\r\n\r\n    onChangeInp = (value,index) => {\r\n        const inputs = this.state.inputs\r\n        const input = inputs[index];\r\n        input.value = value;\r\n        input.isTuched = true;\r\n        Object.keys(input.validation).map((elm)=>{\r\n            if(elm == \"required\"){\r\n                if(value == \"\" || value == null){\r\n                    input.isValid = false;\r\n                }\r\n                else{\r\n                    input.isValid = true\r\n                }\r\n\r\n            }else if (elm == \"email\"){\r\n                let re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                if(re.test(value)){\r\n                    input.isValid = true;\r\n                }\r\n                else{\r\n                    input.isValid = false\r\n                }\r\n            }\r\n\r\n        })\r\n        this.setState({\r\n            inputs\r\n        })\r\n\r\n    }\r\n\r\n    loginUser = async data => {\r\n      let email = data[0].value;\r\n      let password = data[1].value;\r\n\r\n      if(email && password){\r\n        try {\r\n          let response = await POST('/api/auth/login', { email, password });\r\n          if(response.success){\r\n            localStorage.setItem('userId', response.data.id);\r\n            localStorage.setItem('userToken', response.data.token);\r\n            window.location.href = '/page1';\r\n          } else {\r\n            this.setState({error: response.error});\r\n          }\r\n        } catch (error) {\r\n          this.setState({\r\n            error: error.message\r\n          });\r\n        }\r\n      } else {\r\n        this.setState({\r\n          error: 'Username or password is empty!'\r\n        });\r\n      }\r\n    }\r\n\r\n     loginStyle = {\r\n        backgroundImage: `url(${loginBg})`,\r\n      }\r\n    render(){\r\n        return(\r\n            <div className=\"Login\" style={this.loginStyle}>\r\n                <div className=\"login_size\">\r\n                <div className=\"login_top\">\r\n                    <img src={logo} />\r\n                </div>\r\n                <div className=\"login_inputs\">\r\n                  {this.state.inputs.map((elm, index)=>{\r\n                      return(\r\n                          <>\r\n                          <p className=\"error_message\">{elm.isTuched && !elm.isValid?elm.massage:''}</p>\r\n                          <input key={index} type={elm.type} value={elm.value} onChange={event=>this.onChangeInp(event.target.value,index)} placeholder={elm.label} />\r\n                          </>\r\n                      )\r\n                  })}\r\n                <button onClick={() => this.loginUser(this.state.inputs)}>Login</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './header.css';\r\nimport userImg from \"../../../assets/img/user1.png\";\r\n\r\n\r\nexport default class Header extends React.Component {\r\n      constructor(props){\r\n          super(props);\r\n         \r\n      }\r\n    render(){\r\n        return(\r\n            <div className=\"Header\">\r\n                    <div className=\"header_size\">\r\n                        <div className=\"header_size_left\">\r\n                            <img src={userImg} />\r\n                        </div>\r\n                        <div className=\"header_size_right\">\r\n                            <p className=\"Employer_Name\">Employer Name</p>\r\n                            <p className=\"Employer_info\">lorem ipsum dolor</p>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport \"./project_tests.css\";\r\n\r\n\r\n\r\nclass Test extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <p className=\"text_tittle\">Second Test Project</p>\r\n                <div className=\"test_flex\">\r\n                <p>5/23/2019</p>\r\n                <p>ACC001</p>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Test","import React from 'react';\r\nimport { Dropdown, Header } from 'semantic-ui-react';\r\nimport \"./project_tests.css\";\r\nimport Test from \"./test.js\"\r\n\r\n\r\nconst options = [\r\n  {\r\n    key: 1,\r\n    text: 'Second Test Project(1)',\r\n    value: 1,\r\n    content: <Test  content='Second Test Project' subheader='12.11' />,\r\n  },\r\n  {\r\n    key: 2,\r\n    text: 'Thired Test Project(2)',\r\n    value: 2,\r\n    content: <Test content='Tablet' subheader='Thired Test Project(2)' />,\r\n  },\r\n  {\r\n    key: 3,\r\n    text: 'Fourth Test Project(3)',\r\n    value: 3,\r\n    content: <Test  content='Desktop' subheader='Fourth Test Project(3)' />,\r\n  },\r\n]\r\n\r\nconst Projects_tests = () => (\r\n    <div>\r\n        <Dropdown selection fluid options={options} placeholder='Projects' />\r\n    </div>\r\n)\r\n\r\nexport default Projects_tests","import React from 'react';\r\nimport './page1.css';\r\nimport Header from '../header/Header';\r\nimport background from \"../../../assets/img/login_bg.png\";\r\nimport Projects_tests from \"../project_tests/Projects_tests\"\r\n\r\n\r\nexport default class Page1 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let background_page = {\r\n            backgroundImage: `url(${background})`,\r\n        }\r\n        return (\r\n            <div className=\"Page1\" style={background_page}>\r\n                <div className=\"page1_size\">\r\n                    <Header />\r\n                    <Projects_tests />\r\n                    <div className=\"next_btn_div\">\r\n                    <button className=\"next_btn\">next <i className=\"fas fa-arrow-right\" /> </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Login from \"./components/Login/Login.jsx\";\nimport Page1 from \"./components/project/page1/Page1\"\nimport {Route,NavLink} from \"react-router-dom\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path={'/'} exact={true} component={Login}  />\n      <Route path={'/page1'} exact={true} component={Page1}  />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\n \nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\"\nconst app = (\n    <BrowserRouter>\n        <App></App>\n    </BrowserRouter>\n)\nReactDOM.render(app, document.getElementById('root'));\n\n\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/login_bg.5f59f833.png\";"],"sourceRoot":""}